Index: War.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import java.util.*;\n\npublic class War {\n    User initialChallenger;\n    User initialOpponent;\n    User challenger;\n    User opponent;\n    Vector<Character> challengerArmy;\n    Vector<Character> opponentArmy;\n\n    private Vector<Character> challengerArmyAttackingArray;\n    private Vector<Character> opponentArmyAttackingArray;\n    private Vector<Character> challengerArmyDefendingArray;\n    private Vector<Character> opponentArmyDefendingArray;\n    private Vector<Character> opponentArmyHealingArray;\n    private Vector<Character> challengerArmyHealingArray;\n\n    public War(User initialChallenger,User initialOpponent){\n        this.initialChallenger = initialChallenger;\n        this.initialOpponent = initialOpponent;\n        this.startWar();\n    }\n\n    private void initialingArrays(Vector<Character> challengerArmy, Vector<Character> opponentArmy){\n        this.challengerArmyAttackingArray = new Vector<>(attackPriorityCheck(challengerArmy));\n        this.opponentArmyAttackingArray = new Vector<>(attackPriorityCheck(opponentArmy));\n        this.opponentArmyDefendingArray = new Vector<>(defencePriorityCheck(opponentArmy));\n        this.challengerArmyDefendingArray = new Vector<>(defencePriorityCheck(challengerArmy));\n        this.opponentArmyHealingArray = new Vector<>(opponentArmy); // Create new Vector objects\n        this.challengerArmyHealingArray = new Vector<>(challengerArmy); // Create new Vector objects\n        this.opponentArmyHealingArray.sort(Comparator.comparingDouble(Character::getHealth));//ascending order\n        this.challengerArmyHealingArray.sort(Comparator.comparingDouble(Character::getHealth));//ascending order\n\n    }\n\n    public Vector<Character> attackPriorityCheck(Vector<Character> list){\n        list.sort(Comparator.comparingDouble(Character::getSpeed)\n                .thenComparing(character -> {\n                    if (character instanceof Healer) return 1;\n                    else if (character instanceof Mage) return 2;\n                    else if (character instanceof MythicalCreature) return 3;\n                    else if (character instanceof Knight) return 4;\n                    else return 5; // Archer\n                }).reversed());\n\n\n        return list;\n    }\n\n    public Vector<Character> defencePriorityCheck(Vector<Character> list){\n        list.sort(Comparator.comparingDouble(Character::getDefence)\n                .thenComparing(character -> {\n                    if (character instanceof Mage) return 1;\n                    else if (character instanceof Knight) return 2;\n                    else if (character instanceof Archer) return 3;\n                    else if (character instanceof MythicalCreature) return 4;\n                    else return 5; // Healer\n                }));\n        return list;\n    }\n\n    void startWar(){\n        this.challenger = initialChallenger;\n        this.opponent = initialOpponent;\n        this.challengerArmy = new Vector<>();\n        for (Character character : initialChallenger.getArmy()) {\n            this.challengerArmy.add(character.clone());\n        }\n\n        this.opponentArmy = new Vector<>();\n        for (Character character : initialOpponent.getArmy()) {\n            this.opponentArmy.add(character.clone());\n        }\n        for(Character character:challengerArmy){\n            switch (opponent.getHomeGround()) {\n                case \"HillCrest\" -> {\n                    if (character.getCharacterType().equals(\"HighLander\")) {\n                        character.setAttack(character.getAttack() + 1);\n                        character.setDefence(character.getDefence() + 1);\n                    }\n                }\n                case \"MarshLand\" -> {\n                    if (character.getCharacterType().equals(\"MarshLander\")) {\n                        character.setDefence(character.getDefence() + 2);\n                    }\n                    if (character.getCharacterType().equals(\"SunChild\")) {\n                        character.setAttack(character.getAttack() - 1);\n                    }\n                    if (character.getCharacterType().equals(\"Mystics\")) {\n                        character.setSpeed(character.getSpeed() - 1);\n                    }\n                }\n                case \"Desert\" -> {\n                    if (character.getCharacterType().equals(\"MarshLander\")) {\n                        character.setHealth(character.getHealth() - 1);\n                    }\n                    if (character.getCharacterType().equals(\"SunChild\")) {\n                        character.setAttack(character.getAttack() + 1);\n                    }\n                }\n                case \"Arcane\" -> {\n                    if (character.getCharacterType().equals(\"Mystics\")) {\n                        character.setAttack(character.getAttack() + 2);\n                    }\n                    if (character.getCharacterType().equals(\"HighLander\")) {\n                        character.setSpeed(character.getSpeed() - 1);\n                        character.setDefence(character.getDefence() - 1);\n                    }\n                    if (character.getCharacterType().equals(\"MarshLander\")) {\n                        character.setSpeed(character.getSpeed() - 1);\n                        character.setDefence(character.getDefence() - 1);\n                    }\n                }\n            }\n        }\n        initialingArrays(challengerArmy, opponentArmy);\n\n        Iterator<Character> challengerHealingIterator = challengerArmyHealingArray.iterator();\n        while (challengerHealingIterator.hasNext()) {\n            Character character = challengerHealingIterator.next();\n            if (character instanceof Healer) {\n                challengerHealingIterator.remove(); // Remove the healer from challengerArmyHealingArray\n            }\n        }\n\n        Iterator<Character> opponentHealingIterator = opponentArmyHealingArray.iterator();\n        while (opponentHealingIterator.hasNext()) {\n            Character character = opponentHealingIterator.next();\n            if (character instanceof Healer) {\n                opponentHealingIterator.remove(); // Remove the healer from opponentArmyHealingArray\n            }\n        }\n        boolean attackingSide = false; //set to 0 when challenger is attacking and set to 1 when opponent is attacking\n        int turn = 1;\n        double previousHealth = opponentArmyDefendingArray.get(0).getHealth();\n        int ci = 0;\n        int oi = 0;\n\n        System.out.println(\"\\n\\n\" + initialChallenger.getName() + \"  VS  \" + initialOpponent.getName() + \"\\n\");\n\n        while (true) {\n            //initially first attacking side is challenger\n            if (!attackingSide) {\n                System.out.println(\"Turn \" + turn + \": \" + initialChallenger.getName());\n\n                //check the challenger attacking army character is a healer?\n                if(!(challengerArmyAttackingArray.getFirst() instanceof Healer)) {\n                    System.out.println(challengerArmyAttackingArray.get(ci).getName() + \" attacks \" + opponentArmyDefendingArray.getFirst().getName());\n\n                    //get the damge value of challenger army attacking array\n                    double damage = 0.5 * (challengerArmyAttackingArray.get(ci).getAttack()) - 0.1 * (opponentArmyDefendingArray.get(0).getDefence());\n\n                    //reduce the health of defending array army charactrer according to the damage value\n                    opponentArmyDefendingArray.get(0).setHealth(opponentArmyDefendingArray.get(0).getHealth() - damage);\n                    System.out.println(opponentArmyDefendingArray.get(0).getName()+\"'s health reduce by \" + damage + \" by the attack of \" + challengerArmyAttackingArray.get(ci).getName());\n\n                    if(initialChallenger.getHomeGround().equals(\"Hillcrest\") && challengerArmyAttackingArray.get(ci).getCharacterType().equals(\"Highlander\")){\n                        //get the damge value of challenger army attacking array\n                        double bonusDamage = 0.5 * (challengerArmyAttackingArray.get(ci).getAttack()*0.2) - 0.1 * (opponentArmyDefendingArray.get(0).getDefence());\n                        //reduce the health of defending array army charactrer according to the damage value\n                        opponentArmyDefendingArray.get(0).setHealth(opponentArmyDefendingArray.get(0).getHealth() - bonusDamage);\n                    }\n                    if(turn != 1){\n                        if(initialChallenger.getHomeGround().equals(\"Arcane\") && opponentArmyDefendingArray.get(0).getCharacterType().equals(\"Mystics\")){\n                            opponentArmyDefendingArray.get(0).setHealth(previousHealth*1.1);\n                        }\n                    }\n                    System.out.println(opponentArmyDefendingArray.getFirst().getName() + \"'s health: \" + opponentArmyDefendingArray.getFirst().getHealth());\n                    System.out.println(challengerArmyAttackingArray.get(ci).getName() + \"'s health: \" + challengerArmyAttackingArray.get(ci).getHealth());\n                    //check the opponentdifendingaramkycharacter is die or not\n                    if(opponentArmyDefendingArray.getFirst().getHealth() <= 0){\n                        //if died print\n                        System.out.println(opponentArmyDefendingArray.getFirst().getName()+\" Died!\");\n\n                        System.out.println(opponentArmyDefendingArray.size());\n\n                        Character deadCharacter = opponentArmyDefendingArray.getFirst();\n\n                        opponentArmyDefendingArray.remove(deadCharacter);\n                        opponentArmyHealingArray.remove(deadCharacter);\n                        opponentArmyAttackingArray.remove(deadCharacter);\n\n                        if (opponentArmyAttackingArray.isEmpty()){\n                            break;\n                        }\n                    }\n\n                }\n                else{\n                    //sort the challengerarmyhealingarray according to current hea,th values\n                    challengerArmyHealingArray.sort(Comparator.comparingDouble(Character::getHealth));;\n                    //calculate the healvalue of the healer\n                    //double healvalue = 0.1*(challengerArmyAttackingArray.get(i).getAttack());\n                    double healvalue = 0.1*(challengerArmyHealingArray.get(0).getAttack());\n                    //get the lowest health character and heal it\n                    challengerArmyHealingArray.get(0).setHealth(challengerArmyHealingArray.get(0).getHealth() + healvalue);\n                    System.out.println(challengerArmyAttackingArray.get(ci).getName() + \" heeals \" + challengerArmyHealingArray.getFirst().getName());\n                    System.out.println(challengerArmyHealingArray.getFirst().getName() + \" is healed \"+challengerArmyHealingArray.get(0).getHealth()+\" by \" + healvalue);\n                    //save the healed charactor into a varibale\n                    Character healedchar = challengerArmyHealingArray.get(0);\n                    //also update the health value on opponentArmyDiffenderArray the lowest health charactor health\n                    for (Character character : opponentArmyDefendingArray) {\n                        if(character.getName().equals(healedchar.getName())){\n                            character.setHealth(character.getHealth()+healvalue);\n                        }\n                    }\n                    System.out.println(challengerArmyHealingArray.getFirst().getName() + \"'s health: \" + challengerArmyHealingArray.getFirst().getHealth());\n                    System.out.println(challengerArmyAttackingArray.get(ci).getName() + \"'s health: \" + challengerArmyAttackingArray.get(ci).getHealth());\n                }\n                attackingSide = true;\n                ci++;\n                System.out.println(\"CI incremented \" + ci);\n            }\n            else{\n                System.out.println(\"Turn \" + turn + \": \" + initialOpponent.getName());\n                //opponent attacking turn\n                if(!(opponentArmyAttackingArray.getFirst() instanceof Healer)) {\n                    System.out.println(opponentArmyAttackingArray.get(oi).getName() + \" attacks \" + challengerArmyDefendingArray.getFirst().getName());\n\n                    //calculate the damage value of opponnet army attacking  value\n                    double dmg = 0.5 * (opponentArmyAttackingArray.get(oi).getAttack()) - 0.1 * (challengerArmyDefendingArray.get(0).getDefence());\n                    //reduce health of challenger army difending  character according to the dmg value\n                    challengerArmyDefendingArray.get(0).setHealth(challengerArmyDefendingArray.get(0).getHealth() - dmg);\n\n                    System.out.println(challengerArmyDefendingArray.get(0).getName() + \"'s health reduce by \" + dmg + \" by the attack of \" + opponentArmyAttackingArray.get(oi).getName());\n\n                    if(initialChallenger.getHomeGround().equals(\"Hillcrest\") && opponentArmyAttackingArray.get(0).getCharacterType().equals(\"Highlander\")){\n                        //get the damge value of challenger army attacking array\n                        double bonusdmg = 0.5 * (opponentArmyAttackingArray.get(oi).getAttack()*0.2) - 0.1 * (challengerArmyDefendingArray.get(0).getDefence());\n                        //reduce the health of defending array army charactrer according to the damage value\n                        opponentArmyDefendingArray.get(0).setHealth(opponentArmyDefendingArray.get(0).getHealth() - bonusdmg);\n                    }\n                    if(turn != 1){\n                        if(initialChallenger.getHomeGround().equals(\"Arcane\") && challengerArmyDefendingArray.get(0).getCharacterType().equals(\"Mystics\")){\n                            challengerArmyDefendingArray.get(0).setHealth(previousHealth*1.1);\n                        }\n                    }\n                    System.out.println(challengerArmyDefendingArray.getFirst().getName() + \"'s health: \" + challengerArmyDefendingArray.getFirst().getHealth());\n                    System.out.println(opponentArmyAttackingArray.get(oi).getName() + \"'s health: \" + opponentArmyAttackingArray.get(oi).getHealth());\n                    //check whther challener army difending charactor is die or not\n                    if(challengerArmyDefendingArray.get(0).getHealth() <= 0){\n                        System.out.println(challengerArmyDefendingArray.get(0).getName()+\" Died!\");\n\n                        Character deadCharacter = challengerArmyDefendingArray.getFirst();\n                        challengerArmyDefendingArray.remove(deadCharacter);\n                        challengerArmyHealingArray.remove(deadCharacter);\n                        challengerArmyAttackingArray.remove(deadCharacter);\n\n                        if (challengerArmyDefendingArray.isEmpty()){\n                            break;\n                        }\n                    }\n                }\n                else{\n\n                    //double healvalue = 0.1*(challengerArmyAttackingArray.get(0).getAttack());\n                    double healvalue = 0.1*(challengerArmyHealingArray.get(0).getAttack());\n                    //update the heal value on charactor healing value\n                    challengerArmyHealingArray.get(0).setHealth(challengerArmyHealingArray.get(0).getHealth()+healvalue);\n                    System.out.println(opponentArmyAttackingArray.get(oi).getName() + \" heals \" + opponentArmyHealingArray.getFirst().getName());\n                    System.out.println(opponentArmyHealingArray.getFirst().getName() + \" is healed \" + opponentArmyHealingArray.get(0).getHealth()+\" by \" + healvalue);\n\n                    //save the healed charactor into a varibale\n                    Character healedchar=challengerArmyHealingArray.get(0);\n                    //also update the health value on challengerArmyDiffenderArray the lowest health charactor health\n                    for (Character character : challengerArmyDefendingArray) {\n                        if(character.getName().equals(healedchar.getName())){\n                            character.setHealth(character.getHealth()+healvalue);\n                        }\n                    }\n                    ;\n                }\n                if (!opponentArmyDefendingArray.isEmpty()) {\n                    previousHealth = opponentArmyDefendingArray.get(0).getHealth();\n                }\n                challengerArmyHealingArray.sort(Comparator.comparingDouble(Character::getHealth));\n                opponentArmyHealingArray.sort(Comparator.comparingDouble(Character::getHealth));\n                attackingSide = false;\n                turn++;\n                oi++;\n                System.out.println(\"OI increment \" + oi);\n\n            }\n            if (oi >= opponentArmyAttackingArray.size()){\n                oi = 0;\n                System.out.println(\"OI zerooo\");\n            }\n\n            if (ci >= challengerArmyAttackingArray.size()){\n                ci = 0;\n                System.out.println(\"OI zerooo\");\n            }\n\n            if(turn > 10){\n                System.out.println(\"WarEnded\");\n                break;\n            }\n            System.out.println(\"challenger left= \" + challengerArmyDefendingArray.size());\n            System.out.println(\"opponent left= \" + opponentArmyDefendingArray.size());\n            System.out.println();\n        }\n\n        System.out.println(\"------Result----------\");\n        if(opponentArmyAttackingArray.isEmpty()) {\n            System.out.println(\"winner is = \" + initialChallenger.getName());\n            initialChallenger.setXp(1);\n            initialChallenger.setCoins(initialOpponent.getCoins()*0.1);\n            initialOpponent.setCoins(-initialOpponent.getCoins()*0.1);\n        } else if (challengerArmyAttackingArray.isEmpty()) {\n            System.out.println(\"winner is = \"+initialOpponent.getName());\n            initialOpponent.setXp(1);\n            initialOpponent.setCoins(initialChallenger.getCoins()*0.1);\n            initialChallenger.setCoins(-initialChallenger.getCoins()*0.1);\n        }\n        else{\n            System.out.println(\"War is Draw\");\n        }\n        System.out.println(initialChallenger.getName() + \" XP: \" + initialChallenger.getXp() + \"    gold coins: \" + initialChallenger.getCoins());\n        System.out.println(initialOpponent.getName() + \" XP: \" + initialOpponent.getXp() + \"    gold coins: \" + initialOpponent.getCoins());\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/War.java b/War.java
--- a/War.java	(revision e91e429b7368b8f06af99a46b7c390a7f18c5813)
+++ b/War.java	(date 1710753251882)
@@ -160,7 +160,7 @@
                         //reduce the health of defending array army charactrer according to the damage value
                         opponentArmyDefendingArray.get(0).setHealth(opponentArmyDefendingArray.get(0).getHealth() - bonusDamage);
                     }
-                    if(turn != 1){
+                    if (turn != 1){
                         if(initialChallenger.getHomeGround().equals("Arcane") && opponentArmyDefendingArray.get(0).getCharacterType().equals("Mystics")){
                             opponentArmyDefendingArray.get(0).setHealth(previousHealth*1.1);
                         }
Index: Menu.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import java.io.*;\nimport java.util.ArrayList;\nimport java.util.Scanner;\nimport java.util.*;\n\npublic class Menu implements MenuInterface{\n    static List<User> userList = new ArrayList<>();\n    static List<String> userNames = new ArrayList<>();\n    private final List<String> archers = List.of(\"shooter\", \"ranger\", \"sunfire\", \"zing\", \"sagittarius\");\n    private final List<String> knights = List.of(\"squire\", \"cavalier\", \"templar\", \"zoro\", \"swiftblade\");\n    private final List<String> mages = List.of(\"warlock\", \"illusionist\", \"enchanter\", \"conjurer\", \"eldritch\");\n    private final List<String> healers = List.of(\"soother\", \"medic\", \"alchemist\", \"saint\", \"lightbringer\");\n    private final List<String> mythicalCreatures = List.of(\"dragon\", \"basilisk\", \"hydra\", \"phoenix\", \"pegasus\");\n    private final List<String> armours = List.of(\"chainmail\", \"regalia\", \"fleece\");\n    private final List<String> artefacts = List.of(\"excalibur\", \"amulet\", \"crystal\");\n\n    private Scanner scanner = new Scanner(System.in);\n    private User currentUser;\n    private User challenger;\n\n    public Menu() {\n        loadFile();\n    }\n    public void displayMenu() {\n        System.out.println(\"\"\n        + \"╔═══════════════════╗\\n\"\n        + \"   Ｍａｉｎ Ｍｅｎｕ  \\n\"\n        + \"╚═══════════════════╝\\n\"\n        + \"1. New Adventure\\n\"\n        + \"2. Add a Custom Profile\\n\"\n        + \"3. Load Your Journey\\n\"\n        + \"4. View Your Journey\\n\"\n        + \"5. View Your Army\\n\"\n        + \"6. Reinforce Army\\n\"\n        + \"7. Initiate a Battle\\n\"\n        + \"8. Exit Arena\\n\"\n        + \"═════════════════════\");\n\n        while (true) {\n            try {\n                int choice = scanner.nextInt();\n\n                switch (choice) {\n                    case 1:\n                        this.createNewProfile();\n                        return;\n                    case 2:\n                        this.createPreviousProfile();\n                        return;\n                    case 3:\n                        this.loadProfile();\n                        return;\n                    case 4:\n                        this.printUserData(currentUser);\n                        this.waitForInput();\n                        this.displayMenu();\n                        return;\n                    case 5:\n                        this.printUserDetailsinWar(currentUser);\n                    case 6:\n                        this.reinforceArmy();\n                        return;\n                    case 7:\n                        this.initiateBattle();\n                    case 8:\n                        saveUserList();\n                        System.out.println(\"Exiting program...\");\n                        System.exit(0);\n                    default:\n                        System.out.println(\"Invalid choice, Please enter a digit from 1 to 6\\n\");\n                }\n            } catch (InputMismatchException e) {\n                System.out.println(\"Invalid input, Please enter a digit from 1 to 6\\n\");\n                scanner.next();\n            }\n        }\n    }\n    public void saveUserList(){\n        try{\n            FileOutputStream data = new FileOutputStream(\"Data.ser\");\n            ObjectOutputStream obj = new ObjectOutputStream(data);\n            obj.writeObject(userList);\n            obj.close();\n        }\n        catch (IOException e) {\n            System.out.println(\"An error occurred.\");\n            e.printStackTrace();\n        }\n    }\n    public void loadFile() {\n        try (ObjectInputStream in = new ObjectInputStream(new FileInputStream(\"Data.ser\"))){\n            userList = (List<User>) in.readObject();\n        } catch (IOException | ClassNotFoundException e) {\n            System.out.println(\"errorrrrrrrrrrrr\");\n            e.printStackTrace();\n        }\n    }\n\n    @Override\n    public void createProfile() {\n\n    }\n\n    private void createNewProfile() {\n        System.out.print(\"Enter Your Name: \");\n        String name = scanner.next();\n\n        String userName;\n        System.out.println(\"Now choose a USERNAME. This must be UNIQUE and you can't change this later.\");\n        while (true) {\n            System.out.print(\"Enter Username: \");\n            userName = scanner.next();\n            if (userNames.contains(userName)) {\n                System.out.println(\"Username Already Exists!\");\n            } else {\n                userNames.add(userName);\n                break;\n            }\n        }\n        System.out.println(\"Now choose a home ground for your army\\n\" +\n                \"1. Hillcrest\\n\" +\n                \"2. Marshland\\n\" +\n                \"3. Desert\\n\" +\n                \"4. Arcane\");\n\n        int homeGroundChoice = 0;\n        while (true) {\n            try {\n                homeGroundChoice = scanner.nextInt();\n                if (homeGroundChoice >= 1 && homeGroundChoice <= 4) {\n                    break; // Exit the loop if a valid choice is made\n                } else {\n                    System.out.println(\"\\nInvalid Choice, Please enter a digit from 1 to 4\");\n                }\n            } catch (InputMismatchException e) {\n                System.out.println(\"\\nInvalid Input, Please enter a digit from 1 to 4\");\n                scanner.next(); // Clear the scanner buffer\n            }\n        }\n        User newUser;\n        if (homeGroundChoice == 1) {\n            newUser = new User(name, userName, \"Hillcrest\");\n        } else if (homeGroundChoice == 2) {\n            newUser = new User(name, userName, \"Marshland\");\n        } else if (homeGroundChoice == 3) {\n            newUser = new User(name, userName, \"Desert\");\n        } else {\n            newUser = new User(name, userName, \"Arcane\");\n        }\n\n        System.out.println(\"\\nPerfect! You're on the verge of your first battle. Let's now enforce your army\");\n        System.out.println(\"Here's a detailed table about troops. Be mindful to choose only one character from each type\\n\");\n        Table.displayTroopsTable();\n        System.out.println(\"\\nYou have only \" + newUser.getCoins() + \" gc in your treasure\");\n        System.out.println(\"Embark on your journey by selecting characters from above categories\\n\");\n\n        while (newUser.getArmy().size() < 5) {\n            System.out.print(\"Provide a name to bring it to life: \");\n            String characterName = scanner.next().toLowerCase();\n            if (archers.contains(characterName)) {\n                newUser.addTroopToArmy(new Archer(characterName));\n            } else if (knights.contains(characterName)) {\n                newUser.addTroopToArmy(new Knight(characterName));\n            } else if (mages.contains(characterName)) {\n                newUser.addTroopToArmy(new Mage(characterName));\n            } else if (healers.contains(characterName)) {\n                newUser.addTroopToArmy(new Healer(characterName));\n            } else if (mythicalCreatures.contains(characterName)) {\n                newUser.addTroopToArmy(new MythicalCreature(characterName));\n            } else {\n                System.out.println(\"Enter a valid name!!\");\n            }\n            System.out.println(\"You have only \" + newUser.getCoins() + \" coins remaining\\n\");\n        }\n\n        System.out.println(\"PERFECT!! Your legion is now complete\");\n        userList.add(newUser);\n        saveUserList();\n        System.out.println(\"\\nWELCOME to the world of Mystic Mayhem\" + \"\\nYou are all set to go\\n\");\n        printUserData(newUser);\n        printArmy(newUser);\n        setCurrentUser(newUser);\n        System.out.println();\n\n        System.out.println(\"\\n\" +\n            \"════════════════════\\n\" +\n            \"1. Initiate a Battle\\n\" +\n            \"2. Back to Main Menu\\n\" +\n            \"════════════════════\\n\");\n        while (true) {\n            try {\n                int choice = scanner.nextInt();\n                switch (choice) {\n                    case 1:\n                        System.out.println(\"Battle initiated!\");\n                        initiateBattle();\n                        saveUserList();\n                        break;\n                    case 2:\n                        System.out.println(\"Returning to the main menu...\\n\");\n                        displayMenu();\n                        break;\n                    default:\n                        System.out.println(\"Invalid choice. Please try again.\");\n                        break;\n                }\n            } catch (InputMismatchException e) {\n                System.out.println(\"Invalid input. Please try again.\");\n                scanner.next();\n            }\n        }\n    }\n    public void changeCharacters(User curretUser) {\n        if (curretUser != null) {\n            printArmy(curretUser);\n            Table.displayTroopsTable();\n            System.out.println(\"Choose replacing character type.\\n\" +\n                    \"1. Archer\\n\" +\n                    \"2. Knight\\n\" +\n                    \"3. Mage\\n\" +\n                    \"4. Healer\\n\" +\n                    \"5. Mythical Creature\");\n            try {\n                int charactertype = scanner.nextInt();\n                while (1 > charactertype || charactertype > 5) {\n                    System.out.println(\"Select a number from 1 to 5\\n\");\n                    changeCharacters(curretUser);\n                }\n                while (true) {\n                    System.out.print(\"Enter character name to replace with the c: \");\n                    String newCharacterName = scanner.next();\n                    if (charactertype == 1) {\n                        if (archers.contains(newCharacterName.toLowerCase().strip())) {\n                            curretUser.replaceTroop(curretUser.getMyArmyMap().get(\"Archer\"), new Archer(newCharacterName));\n                            break;\n                        }\n                    } else if (charactertype == 2) {\n                        if (knights.contains(newCharacterName.toLowerCase().strip())) {\n                            curretUser.replaceTroop(curretUser.getMyArmyMap().get(\"Knight\"), new Knight(newCharacterName));\n                            break;\n                        }\n                    } else if (charactertype == 3) {\n                        if (mages.contains(newCharacterName.toLowerCase().strip())) {\n                            curretUser.replaceTroop(curretUser.getMyArmyMap().get(\"Mage\"), new Mage(newCharacterName));\n                            break;\n                        }\n                    } else if (charactertype == 4) {\n                        if (healers.contains(newCharacterName.toLowerCase().strip())) {\n                            curretUser.replaceTroop(curretUser.getMyArmyMap().get(\"Healer\"), new Healer(newCharacterName));\n                            break;\n                        }\n                    } else {\n                        if (mythicalCreatures.contains(newCharacterName.toLowerCase().strip())) {\n                            curretUser.replaceTroop(curretUser.getMyArmyMap().get(\"MythicalCreature\"), new MythicalCreature(newCharacterName));\n                            break;\n                        }\n                    }\n                }\n                waitForInput();\n                displayMenu();\n            }catch (InputMismatchException e){\n                System.out.println(\"Select a number from 1 to 5\\n\");\n                scanner.next();\n                changeCharacters(curretUser);\n            }\n        }else{\n            System.out.println(\"You don't have an active profile yet\\n\"+\n                    \"Please create a new profile or load a profile to change troops\\n\");\n            waitForInput();\n            System.out.println(\"Directing back to Main Menu...\\n\");\n            displayMenu();\n        }\n    }\n    public void loadProfile() {\n        boolean validUsernameEntered = false;\n        if (!userList.isEmpty()){\n            while (!validUsernameEntered) {\n                System.out.println(\"Select a profile to load from below\");\n                for (User user : userList) {\n                    System.out.print(user.getUserName() + \"  \" + user.getXp() + \"Xp \\n\");\n                }\n                System.out.print(\"\\nEnter the username of the profile you want to load: \");\n                String userNameToLoad = scanner.next();\n\n                for (User user : userList) {\n                    if (user.getUserName().equals(userNameToLoad)) {\n                        System.out.println(\"\\nProfile loaded successfully!\\n\");\n                        setCurrentUser(user);\n                        printUserData(user);\n                        validUsernameEntered = true; // Valid username entered, exit the loop\n                        break;\n                    }\n                }\n                if (!validUsernameEntered) {\n                    System.out.println(\"\\nProfile with username '\" + userNameToLoad + \"' not found. Please try again.\\n\");\n                }\n            }\n        }\n        else{\n            System.out.println(\"No users!\");\n        }\n        waitForInput();\n        displayMenu();\n    }\n    public void addEquipments() {\n        System.out.println(\"You currently have: \");\n        for (Character character : currentUser.getArmy()) {\n            System.out.println(\"                 \" + character.getName().toUpperCase() + \" with \" + character.armourCount + \" armour and \"\n                    + character.artefactCount + \" artefact\");\n        }\n        System.out.println(\"Select the character to enforce with equipment\\n\");\n        try {\n            System.out.println(\"ARCHER [enter 1], KNIGHT [enter 2], MAGE [enter 3], HEALER [enter 4], MYTHICAL_CREATURE [enter 5]: \");\n            int choice = scanner.nextInt();\n            System.out.println(\"\\nDelve into the extensive selection of available equipment detailed below\\n\");\n            Table.displayEquipmentTable();\n            System.out.print(\"\\nEnter the name of the equipment: \");\n            String equipment = scanner.next().toLowerCase();\n            Armour armour = null;\n            Artefact artefact = null;\n            if (armours.contains(equipment)) {\n                armour = new Armour(equipment);\n            } else if (artefacts.contains(equipment)) {\n                artefact = new Artefact(equipment);\n            }else {\n                System.out.println(\"Equipment not found. Prompt Again \");\n                addEquipments();\n                return;\n            }\n            switch (choice) {\n                case 1:\n                    if (currentUser.addEquipment(currentUser.getMyArmyMap().get(\"Archer\"), armour != null ? armour : artefact)) {\n                        System.out.println(\"Equipment added successfully.\");\n                    }\n                    break;\n                case 2:\n                    if (currentUser.addEquipment(currentUser.getMyArmyMap().get(\"Knight\"), armour != null ? armour : artefact)) {\n                        System.out.println(\"Equipment added successfully.\");\n                    }\n                    break;\n                case 3:\n                    if (currentUser.addEquipment(currentUser.getMyArmyMap().get(\"Mage\"), armour != null ? armour : artefact)) {\n                        System.out.println(\"Equipment added successfully.\");\n                    }\n                    break;\n                case 4:\n                    if (currentUser.addEquipment(currentUser.getMyArmyMap().get(\"Healer\"), armour != null ? armour : artefact)) {\n                        System.out.println(\"Equipment added successfully.\");\n                    }\n                    break;\n                case 5:\n                    if (currentUser.addEquipment(currentUser.getMyArmyMap().get(\"Mythical Creature\"), armour != null ? armour : artefact)) {\n                        System.out.println(\"Equipment added successfully.\");\n                    }\n                    break;\n                default:\n                    System.out.println(\"Invalid choice!\");\n                    break;\n            }\n            waitForInput();\n            System.out.println(\"\\nDirecting back to main menu...\\n\");\n            saveUserList();\n            displayMenu();\n        } catch(InputMismatchException e){\n            System.out.println(\"Invalid input!\");\n            scanner.next();\n            addEquipments();// Clear the scanner buffer\n        }\n    }\n    public User getCurrentUser() {\n        return currentUser;\n    }\n    public void setCurrentUser(User user) {\n        this.currentUser = user;\n    }\n    public void printUserData(User user) {\n        try {\n            System.out.println(\"▂ ▅ ▇ █ \uD83C\uDF1F █ ▇ ▅ ▂\");\n            System.out.println(\"Username: \" + user.getUserName());\n            System.out.println(\"UserID: \" + user.getUserID());\n            System.out.println(\"Coins: \" + user.getCoins() + \" gc\");\n            System.out.println(\"Battle Xp: \" + user.getXp());\n            System.out.println(\"▂ ▂ ▂ PROFILE ▂ ▂ ▂ \\n\");\n        } catch (NullPointerException e){\n            System.out.println(\"Sorry you haven't created any profiles yet\");\n            displayMenu();\n        }\n//        finally {\n//            displayMenu();\n//        }\n    }\n    public void printUserDetailsinWar(User user) {\n        clearScreen();\n        try {\n            System.out.println(\" \uD83D\uDC51 Username: \" + user.getUserName());\n            System.out.println(\" \uD83C\uDF1F XP: \" + user.getXp());\n            System.out.println(\" \uD83C\uDF96\uFE0F Characters:\");\n            int i = 1;\n            for (Character character : user.getArmy()) {\n                System.out.println(\"   \" + i + \". \" + character.getName().toUpperCase());\n                i++;\n            }\n            System.out.println(\"╚════════════════════════════╝\\n\");\n        } catch (NullPointerException e){\n            System.out.println(\"Please create or load a profile to view army\\n\");\n            displayMenu();\n        }\n    }\n    public void printArmy(User user) {\n        System.out.println(\"⚔\uFE0F══ Your Legion ══⚔\uFE0F\");\n        for (Character character : user.getArmy()) {\n            String characterType = \"\";\n            if (character instanceof Archer) {\n                characterType = \"Archer\";\n            } else if (character instanceof Knight) {\n                characterType = \"Knight\";\n            } else if (character instanceof Mage) {\n                characterType = \"Mage\";\n            } else if (character instanceof Healer) {\n                characterType = \"Healer\";\n            } else if (character instanceof MythicalCreature) {\n                characterType = \"Mythical Creature\";\n            }\n\n            System.out.println(characterType + \": \" + character.getName() +\n                    \" --> Price \" + character.getPrice() + \" | Attack \" + character.getAttack() +\n                    \" | Defence \" + character.getDefence() + \" | Health \" + character.getHealth() +\n                    \" | Speed \" + character.getSpeed());\n        }\n        System.out.println();\n    }\n    private User getOpponent() {\n        if (userList.size() < 2) {\n            System.out.println(\"There are not enough users to challenge. Please add more users.\");\n            return null;\n        }\n\n        List<User> availableOpponents = new ArrayList<>(userList);\n        availableOpponents.remove(currentUser);\n\n        if (availableOpponents.isEmpty()) {\n            System.out.println(\"No available opponents to challenge.\");\n            return null;\n        }\n\n        Random random = new Random();\n        User opponent = availableOpponents.get(random.nextInt(availableOpponents.size()));\n\n        printUserDetailsinWar(opponent);\n\n        while (true) {\n            System.out.print(\"Challenge , Skip or Exit to Main Menu (C/S/E): \");\n            String decision = scanner.next();\n            if (decision.equalsIgnoreCase(\"c\")) {\n                challenger = opponent;\n                return challenger;\n            } else if (decision.equalsIgnoreCase(\"s\")) {\n                opponent = availableOpponents.get(random.nextInt(availableOpponents.size()));\n                printUserDetailsinWar(opponent);\n            } else if (decision.equalsIgnoreCase(\"e\")) {\n                displayMenu();\n                return null;\n            } else {\n                System.out.println(\"Enter 'c' to challenge , 's' to skip or 'e' to exit to main menu\");\n            }\n        }\n    }\n    public void reinforceArmy(){\n        System.out.println(\"\\n════════════════════\\n\" +\n            \"1. Replace Troops\\n\" +\n            \"2. GearUp Troops\\n\" +\n            \"3. Back to Main Menu\\n\" +\n            \"════════════════════\\n\");\n        if (currentUser != null) {\n            while (true) {\n                try {\n                    int choice = scanner.nextInt();\n                    if (choice == 1) {\n                        changeCharacters(currentUser);\n                        break;\n                    } else if (choice == 2) {\n                        addEquipments();\n                        break;\n                    } else if (choice == 3){\n                        displayMenu();\n                        break;\n                    } else System.out.println(\"Invalid choice, choose a number from 1 to 3\");\n                } catch (InputMismatchException e) {\n                    System.out.println(\"Invalid input, choose a number from 1 to 3\");\n                    scanner.next();\n                }\n            }\n        }\n        else {\n            System.out.println(\"You don't have an active profile yet\\n\"+\n                    \"Please create a new profile or load a profile to change troops\\n\");\n            System.out.println(\"Directing back to Main Menu...\\n\");\n            displayMenu();\n        }\n        saveUserList();\n    }\n    public void initiateBattle(){\n        if (currentUser != null) {\n            System.out.println(\"\\n═════════════════════\\n\" +\n                \"1. Find a Battle\\n\" +\n                \"2. Reinforce Army\\n\" +\n                \"3. Back to Main Menu\\n\" +\n                \"═════════════════════\\n\");\n            while (true) {\n                try {\n                    int choice = scanner.nextInt();\n                    if (choice == 1) {\n                        User opponent = getOpponent();\n                        War war = new War(currentUser,opponent);\n                        waitForInput();\n                        displayMenu();\n                        break;\n                    } else if (choice == 2) {\n                        reinforceArmy();\n                        break;\n                    } else if (choice == 3) {\n                        displayMenu();\n                        break;\n                    } else {\n                        System.out.println(\"Invalid choice, choose a number from 1 to 3\");\n                    }\n                } catch (InputMismatchException e) {\n                    System.out.println(\"Invalid input, choose a number from 1 to 3\");\n                    scanner.next();\n                }\n            }\n        }\n        else {\n            System.out.println(\"You don't have an active profile yet\\n\"+\n                    \"Please create a new profile or load a profile to change troops\\n\");\n            System.out.println(\"Directing back to Main Menu...\\n\");\n            displayMenu();\n        }\n        saveUserList();\n    }\n    private void createPreviousProfile(){\n        System.out.print(\"Enter Your Name: \");\n        String name = scanner.next();\n\n        String userName;\n        System.out.println(\"Now choose a USERNAME. This must be UNIQUE and you can't change this later.\");\n        while (true) {\n            System.out.print(\"Enter Username: \");\n            userName = scanner.next();\n            if (userNames.contains(userName)) {\n                System.out.println(\"Username Already Exists!\");\n            } else {\n                userNames.add(userName);\n                break;\n            }\n        }\n        System.out.println(\"Now choose a home ground for your army\\n\" +\n                \"1. Hillcrest\\n\" +\n                \"2. Marshland\\n\" +\n                \"3. Desert\\n\" +\n                \"4. Arcane\");\n\n        int homeGroundChoice = 0;\n        while (true) {\n            try {\n                homeGroundChoice = scanner.nextInt();\n                if (homeGroundChoice >= 1 && homeGroundChoice <= 4) {\n                    break; // Exit the loop if a valid choice is made\n                } else {\n                    System.out.println(\"\\nInvalid Choice, Please enter a digit from 1 to 4\");\n                }\n            } catch (InputMismatchException e) {\n                System.out.println(\"\\nInvalid Input, Please enter a digit from 1 to 4\");\n                scanner.next(); // Clear the scanner buffer\n            }\n        }\n        User newUser;\n        if (homeGroundChoice == 1) {\n            newUser = new User(name, userName, \"Hillcrest\");\n        } else if (homeGroundChoice == 2) {\n            newUser = new User(name, userName, \"Marshland\");\n        } else if (homeGroundChoice == 3) {\n            newUser = new User(name, userName, \"Desert\");\n        } else {\n            newUser = new User(name, userName, \"Arcane\");\n        }\n        setCurrentUser(newUser);\n        int xp = 0;\n        while (true) {\n            System.out.print(\"\\nEnter the XP value: \");\n            try {\n                xp = scanner.nextInt();\n                if (xp > 0) {\n                    newUser.setXp(xp);\n                    break; // Exit the loop if a valid input is provided\n                } else {\n                    System.out.println(\"Please enter a positive integer\");\n                }\n            } catch (InputMismatchException e) {\n                System.out.println(\"Invalid input. Please enter a valid integer.\");\n                scanner.next(); // Clear the invalid input from the scanner buffer\n            }\n        }\n        newUser.setCoins(1000000); // Set the gold coins to a huge value until troops added.then get the input and change the gold coins to the required amount\n        System.out.println(\"\\nPerfect! You're on the verge of your first battle. Let's now enforce your army\");\n        System.out.println(\"Here's a detailed table about troops. Be mindful to choose only one character from each type\\n\");\n        Table.displayTroopsTable();\n        System.out.println(\"Embark on your journey by selecting characters from above categories\\n\");\n\n        while (newUser.getArmy().size() < 5) {\n            System.out.print(\"Provide a name to bring it to life: \");\n            String characterName = scanner.next().toLowerCase();\n            if (archers.contains(characterName)) {\n                newUser.addTroopToArmy(new Archer(characterName));\n            } else if (knights.contains(characterName)) {\n                newUser.addTroopToArmy(new Knight(characterName));\n            } else if (mages.contains(characterName)) {\n                newUser.addTroopToArmy(new Mage(characterName));\n            } else if (healers.contains(characterName)) {\n                newUser.addTroopToArmy(new Healer(characterName));\n            } else if (mythicalCreatures.contains(characterName)) {\n                newUser.addTroopToArmy(new MythicalCreature(characterName));\n            } else {\n                System.out.println(\"Enter a valid name!!\");\n            }\n        }\n        int goldCoins = 0;\n        while (true) {\n            System.out.print(\"\\nEnter the coin amount: \");\n            try {\n                goldCoins = scanner.nextInt();\n                if (goldCoins > 0) {\n                    newUser.setCoins(goldCoins);\n                    break; // Exit the loop if a valid input is provided\n                } else {\n                    System.out.println(\"Please enter a positive integer\");\n                }\n            } catch (InputMismatchException e) {\n                System.out.println(\"Invalid input. Please enter a valid integer.\");\n                scanner.next(); // Clear the invalid input from the scanner buffer\n            }\n        }\n        System.out.println(\"PERFECT!! Your legion is now complete\");\n        userList.add(newUser);\n        setCurrentUser(newUser);\n        saveUserList();\n        System.out.println(\"\\nWELCOME to the world of Mystic Mayhem\" + \"\\nYou are all set to go\\n\");\n        printUserData(newUser);\n        System.out.println();\n        printArmy(newUser);\n        System.out.println();\n\n        System.out.println(\"\\n\" +\n            \"════════════════════\\n\" +\n            \"1. Initiate a Battle\\n\" +\n            \"2. Back to Main Menu\\n\" +\n            \"════════════════════\\n\");\n        while (true) {\n            try {\n                int choice = scanner.nextInt();\n                switch (choice) {\n                    case 1:\n                        System.out.println(\"Battle initiated!\");\n                        initiateBattle();\n                        saveUserList();\n                        break;\n                    case 2:\n                        System.out.println(\"Returning to the main menu...\\n\");\n                        displayMenu();\n                        break;\n                    default:\n                        System.out.println(\"Invalid choice. Please try again.\");\n                        break;\n                }\n            } catch (InputMismatchException e) {\n                System.out.println(\"Invalid input. Please try again.\");\n                scanner.next();\n            }\n        }\n    }\n    private static void clearScreen() {\n        System.out.print(\"\\033[H\\033[2J\");\n        System.out.flush();\n    }\n    private void waitForInput() {\n        System.out.println(\"Press Enter to continue...\");\n        try {\n            System.in.read(); // Wait for user to press Enter\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n\n\n\n\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Menu.java b/Menu.java
--- a/Menu.java	(revision e91e429b7368b8f06af99a46b7c390a7f18c5813)
+++ b/Menu.java	(date 1710753372956)
@@ -511,7 +511,48 @@
                     int choice = scanner.nextInt();
                     if (choice == 1) {
                         User opponent = getOpponent();
+                        ArrayList<Character> charactersOpponent = new ArrayList<>();
+                        ArrayList<Character> charactersCurrent = new ArrayList<>();
+                        for (Map.Entry<String, Character> entry : currentUser.getMyArmyMap().entrySet()) {
+                            String key = entry.getKey();
+                            Character value = entry.getValue();
+                            if (key.equals("Archer")){
+                                charactersCurrent.add(new Archer(value.getName()));
+                            }
+                            else if (key.equals("Knight")){
+                                charactersCurrent.add(new Knight(value.getName()));
+                            }
+                            else if (key.equals("Mage")){
+                                charactersCurrent.add(new Mage(value.getName()));
+                            }
+                            else if (key.equals("Healer")){
+                                charactersCurrent.add(new Healer(value.getName()));
+                            }
+                            else if (key.equals("MythicalCreature")){
+                                charactersCurrent.add(new MythicalCreature(value.getName()));
+                            }
+                        }
+                        for (Map.Entry<String, Character> entry : opponent.getMyArmyMap().entrySet()) {
+                            String key = entry.getKey();
+                            Character value = entry.getValue();
+                            if (key.equals("Archer")){
+                                charactersOpponent.add(new Archer(value.getName()));
+                            }
+                            else if (key.equals("Knight")){
+                                charactersOpponent.add(new Knight(value.getName()));
+                            }
+                            else if (key.equals("Mage")){
+                                charactersOpponent.add(new Mage(value.getName()));
+                            }
+                            else if (key.equals("Healer")){
+                                charactersOpponent.add(new Healer(value.getName()));
+                            }
+                            else if (key.equals("MythicalCreature")){
+                                charactersOpponent.add(new MythicalCreature(value.getName()));
+                            }
+                        }
                         War war = new War(currentUser,opponent);
+
                         waitForInput();
                         displayMenu();
                         break;
@@ -690,8 +731,4 @@
             e.printStackTrace();
         }
     }
-
-
-
-
 }
\ No newline at end of file
Index: Data.ser
===================================================================
diff --git a/Data.ser b/Data.ser
deleted file mode 100644
--- a/Data.ser	(revision e91e429b7368b8f06af99a46b7c390a7f18c5813)
+++ /dev/null	(revision e91e429b7368b8f06af99a46b7c390a7f18c5813)
@@ -1,25 +0,0 @@
-�� sr java.util.ArrayListx����a� I sizexp   
-w   
-sr UserɘŸ�J�b D coinsD xpL 
-homeGroundt Ljava/lang/String;L myArmyt Ljava/util/ArrayList;L 	myArmyMapt Ljava/util/Map;L nameq ~ L userIDq ~ L userNameq ~ xp@4              t 	Hillcrestsq ~     w   sr MythicalCreature��u���  xr 	Charactery�W�R� I armourCountI 
-artefactCountD attackD defenceD healthD priceD speedL armourt LArmour;L artefactt 
-LArtefact;L 
-characterTypeq ~ L nameq ~ xp        @(      @,      @.      @^      @       ppt Sunchildt dragonsr MageĲ+�Q��  xq ~ 
-        @(      @      @$      @Y      @(      ppt Marshlandert warlocksr Healer�yQӪ  xq ~ 
-        @$      @       @"      @W�     @      ppq ~ t soothersr ArcherL�RA'[� L nameq ~ xq ~ 
-        @&      @      @      @T      @"      ppt 
-Highlandert shooterpsr Knight>�b��W  xq ~ 
-        @       @"      @      @U@     @       ppq ~ t squirexsr java.util.HashMap���`� F 
-loadFactorI 	thresholdxp?@     w      t Archerq ~ t Mageq ~ t Knightq ~ t Healerq ~ t MythicalCreatureq ~ 
-xt 	muthumalat MU001t muthusq ~ @4              t 	Hillcrestsq ~     w   sq ~ 	        @(      @,      @.      @^      @       ppt Sunchildt dragonsq ~         @$      @       @"      @W�     @      ppq ~ ,t soothersq ~         @&      @      @      @T      @"      ppt 
-Highlandert shooterpsq ~         @(      @      @$      @Y      @(      ppt Marshlandert warlocksq ~         @       @"      @      @U@     @       ppq ~ 4t squirexsq ~ ?@     w      t Archerq ~ 0t Mageq ~ 3t Knightq ~ 6t Healerq ~ .t MythicalCreatureq ~ +xt Rivindut RI001t Riviyasq ~ @^              t Arcanesq ~     w   sq ~         @&      @      @      @T      @"      ppt 
-Highlandert shooterpsq ~         @$      @       @"      @W�     @      ppt Sunchildt soothersq ~         @       @"      @      @U@     @       ppt Marshlandert squiresq ~ 	        @(      @,      @.      @^      @       ppq ~ Ht dragonsq ~                                                 pppt Illusionistxsq ~ ?@     w      t Archerq ~ Dt Mageq ~ Ot Knightq ~ Jt Healerq ~ Gt MythicalCreatureq ~ Mxt 	Sadanathat SA001t Sadanathayasq ~ A.��    @j�     t 	Marshlandsq ~     w   sq ~         @       @"      @      @U@     @       ppt Marshlandert squiresq ~        @(      @      @$      @^      @(      psr Artefactf��n�	�  xr 	Equipmentm�}���i D attackD defenceD healthD priceD speedL nameq ~ xp                                        t amuletq ~ ^t warlocksq ~        @(      @"      @$      @b�     @      psq ~ a                                        t amulett 
-Highlandert medicsq ~ 	       @(      @,      @.      @b      @       psq ~ a                                        t amulett Sunchildt dragonsq ~         @&      @      @      @T      @"      ppt 
-Highlandert shooterpxsq ~ ?@     w      t Archerq ~ pt Mageq ~ `t Knightq ~ ]t Healerq ~ ft MythicalCreatureq ~ kxt gort WH001t 	whitewolfsq ~ @4              t 	Hillcrestsq ~     w   sq ~         @&      @      @      @T      @"      ppt 
-Highlandert shooterpsq ~         @$      @       @"      @W�     @      ppt Sunchildt soothersq ~         @       @"      @      @U@     @       ppt Marshlandert squiresq ~         @(      @      @$      @Y      @(      ppq ~ �t warlocksq ~ 	        @(      @,      @.      @^      @       ppq ~ �t dragonxsq ~ ?@     w      t Archerq ~ t Mageq ~ �t Knightq ~ �t Healerq ~ �t MythicalCreatureq ~ �xt 
-HighwayBust HI001t 
-HighwayBussq ~ @4              t Arcanesq ~     w   sq ~         @       @"      @      @U@     @       ppq ~ �t squiresq ~         @&      @      @      @T      @"      ppq ~ �t shooterpsq ~         @$      @       @"      @W�     @      ppq ~ �t soothersq ~ 	        @(      @,      @.      @^      @       ppq ~ �t dragonsq ~         @(      @      @$      @Y      @(      ppq ~ �t warlockxsq ~ ?@     w      q ~ �q ~ �q ~ �q ~ �q ~ �q ~ �q ~ �q ~ �q ~ �q ~ �xt iit II002t iisq ~ @4              t 	Hillcrestsq ~     w   sq ~         @$      @       @"      @W�     @      ppt Sunchildt soothersq ~         @&      @      @      @T      @"      ppt 
-Highlandert shooterpsq ~         @       @"      @      @U@     @       ppt Marshlandert squiresq ~ 	        @(      @,      @.      @^      @       ppq ~ �t dragonsq ~         @(      @      @$      @Y      @(      ppq ~ �t warlockxsq ~ ?@     w      t Archerq ~ �t Mageq ~ �t Knightq ~ �t Healerq ~ �t MythicalCreatureq ~ �xt RIVIt RI001t RIVIsq ~ A.�H    @i      t Arcanesq ~     w   sq ~         @$      @       @"      @W�     @      ppt Sunchildt soothersq ~         @&      @      @      @T      @"      ppt 
-Highlandert shooterpsq ~         @       @"      @      @U@     @       ppt Marshlandert squiresq ~         @(      @      @$      @Y      @(      ppq ~ �t warlocksq ~ 	        @(      @,      @.      @^      @       ppq ~ �t dragonxsq ~ ?@     w      t Archerq ~ �t Mageq ~ �t Knightq ~ �t Healerq ~ �t MythicalCreatureq ~ �xt Hellot HE001t Heiisq ~ A.�d    @u`     t 	Marshlandsq ~     w   sq ~         @$      @       @"      @W�     @      ppt Sunchildt soothersq ~         @&      @      @      @T      @"      ppt 
-Highlandert shooterpsq ~         @       @"      @      @U@     @       ppt Marshlandert squiresq ~         @(      @      @$      @Y      @(      ppq ~ �t warlocksq ~ 	        @(      @,      @.      @^      @       ppq ~ �t dragonxsq ~ ?@     w      t Archerq ~ �t Mageq ~ �t Knightq ~ �t Healerq ~ �t MythicalCreatureq ~ �xt hit HE001t hellosq ~ A.��    @Y      t Arcanesq ~     w   sq ~ 	        @,      @2      @4      @u@     @4      ppt Mystict pegasussq ~         @$      @       @"      @W�     @      ppt Sunchildt soothersq ~         @(      @      @$      @Y      @(      ppt Marshlandert warlocksq ~         @       @"      @      @U@     @       ppq ~ �t squiresq ~         @&      @      @      @T      @"      ppt 
-Highlandert shooterpxsq ~ ?@     w      t Archerq ~ �t Mageq ~ �t Knightq ~ �t Healerq ~ �t MythicalCreatureq ~ �xt Pakayat PK001t pkyx
\ No newline at end of file
Index: out/production/OOP-Project/Data.ser
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>��\u0000\u0005sr\u0000\u0013java.util.ArrayListx��\u001D��a�\u0003\u0000\u0001I\u0000\u0004sizexp\u0000\u0000\u0000\nw\u0004\u0000\u0000\u0000\nsr\u0000\u0004UserɘŸ�J�b\u0002\u0000\bD\u0000\u0005coinsD\u0000\u0002xpL\u0000\nhomeGroundt\u0000\u0012Ljava/lang/String;L\u0000\u0006myArmyt\u0000\u0015Ljava/util/ArrayList;L\u0000\tmyArmyMapt\u0000\u000FLjava/util/Map;L\u0000\u0004nameq\u0000~\u0000\u0003L\u0000\u0006userIDq\u0000~\u0000\u0003L\u0000\buserNameq\u0000~\u0000\u0003xp@4\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000t\u0000\tHillcrestsq\u0000~\u0000\u0000\u0000\u0000\u0000\u0005w\u0004\u0000\u0000\u0000\u0005sr\u0000\u0010MythicalCreature��u\u001B�\u0001��\u0002\u0000\u0000xr\u0000\tCharactery�\u0006W�R�\u0002\u0000\u000BI\u0000\u000BarmourCountI\u0000\rartefactCountD\u0000\u0006attackD\u0000\u0007defenceD\u0000\u0006healthD\u0000\u0005priceD\u0000\u0005speedL\u0000\u0006armourt\u0000\bLArmour;L\u0000\bartefactt\u0000\nLArtefact;L\u0000\rcharacterTypeq\u0000~\u0000\u0003L\u0000\u0004nameq\u0000~\u0000\u0003xp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000@(\u0000\u0000\u0000\u0000\u0000\u0000@,\u0000\u0000\u0000\u0000\u0000\u0000@.\u0000\u0000\u0000\u0000\u0000\u0000@^\u0000\u0000\u0000\u0000\u0000\u0000@ \u0000\u0000\u0000\u0000\u0000\u0000ppt\u0000\bSunchildt\u0000\u0006dragonsr\u0000\u0004MageĲ+�Q��\u0002\u0000\u0000xq\u0000~\u0000\n\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000@(\u0000\u0000\u0000\u0000\u0000\u0000@\u001C\u0000\u0000\u0000\u0000\u0000\u0000@$\u0000\u0000\u0000\u0000\u0000\u0000@Y\u0000\u0000\u0000\u0000\u0000\u0000@(\u0000\u0000\u0000\u0000\u0000\u0000ppt\u0000\u000BMarshlandert\u0000\u0007warlocksr\u0000\u0006Healer�y\u0015\u001EQ\u000EӪ\u0002\u0000\u0000xq\u0000~\u0000\n\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000@$\u0000\u0000\u0000\u0000\u0000\u0000@ \u0000\u0000\u0000\u0000\u0000\u0000@\"\u0000\u0000\u0000\u0000\u0000\u0000@W�\u0000\u0000\u0000\u0000\u0000@\u0018\u0000\u0000\u0000\u0000\u0000\u0000ppq\u0000~\u0000\u000Et\u0000\u0007soothersr\u0000\u0006ArcherL�RA\u0013'[�\u0002\u0000\u0001L\u0000\u0004nameq\u0000~\u0000\u0003xq\u0000~\u0000\n\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000@&\u0000\u0000\u0000\u0000\u0000\u0000@\u0010\u0000\u0000\u0000\u0000\u0000\u0000@\u0018\u0000\u0000\u0000\u0000\u0000\u0000@T\u0000\u0000\u0000\u0000\u0000\u0000@\"\u0000\u0000\u0000\u0000\u0000\u0000ppt\u0000\nHighlandert\u0000\u0007shooterpsr\u0000\u0006Knight>�b�\u0006�W\u0002\u0000\u0000xq\u0000~\u0000\n\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000@ \u0000\u0000\u0000\u0000\u0000\u0000@\"\u0000\u0000\u0000\u0000\u0000\u0000@\u001C\u0000\u0000\u0000\u0000\u0000\u0000@U@\u0000\u0000\u0000\u0000\u0000@ \u0000\u0000\u0000\u0000\u0000\u0000ppq\u0000~\u0000\u0012t\u0000\u0006squirexsr\u0000\u0011java.util.HashMap\u0005\u0007���\u0016`�\u0003\u0000\u0002F\u0000\nloadFactorI\u0000\tthresholdxp?@\u0000\u0000\u0000\u0000\u0000\fw\b\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0005t\u0000\u0006Archerq\u0000~\u0000\u0018t\u0000\u0004Mageq\u0000~\u0000\u0011t\u0000\u0006Knightq\u0000~\u0000\u001Ct\u0000\u0006Healerq\u0000~\u0000\u0015t\u0000\u0010MythicalCreatureq\u0000~\u0000\rxt\u0000\tmuthumalat\u0000\u0005MU001t\u0000\u0005muthusq\u0000~\u0000\u0002@4\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000t\u0000\tHillcrestsq\u0000~\u0000\u0000\u0000\u0000\u0000\u0005w\u0004\u0000\u0000\u0000\u0005sq\u0000~\u0000\t\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000@(\u0000\u0000\u0000\u0000\u0000\u0000@,\u0000\u0000\u0000\u0000\u0000\u0000@.\u0000\u0000\u0000\u0000\u0000\u0000@^\u0000\u0000\u0000\u0000\u0000\u0000@ \u0000\u0000\u0000\u0000\u0000\u0000ppt\u0000\bSunchildt\u0000\u0006dragonsq\u0000~\u0000\u0014\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000@$\u0000\u0000\u0000\u0000\u0000\u0000@ \u0000\u0000\u0000\u0000\u0000\u0000@\"\u0000\u0000\u0000\u0000\u0000\u0000@W�\u0000\u0000\u0000\u0000\u0000@\u0018\u0000\u0000\u0000\u0000\u0000\u0000ppq\u0000~\u0000,t\u0000\u0007soothersq\u0000~\u0000\u0017\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000@&\u0000\u0000\u0000\u0000\u0000\u0000@\u0010\u0000\u0000\u0000\u0000\u0000\u0000@\u0018\u0000\u0000\u0000\u0000\u0000\u0000@T\u0000\u0000\u0000\u0000\u0000\u0000@\"\u0000\u0000\u0000\u0000\u0000\u0000ppt\u0000\nHighlandert\u0000\u0007shooterpsq\u0000~\u0000\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000@(\u0000\u0000\u0000\u0000\u0000\u0000@\u001C\u0000\u0000\u0000\u0000\u0000\u0000@$\u0000\u0000\u0000\u0000\u0000\u0000@Y\u0000\u0000\u0000\u0000\u0000\u0000@(\u0000\u0000\u0000\u0000\u0000\u0000ppt\u0000\u000BMarshlandert\u0000\u0007warlocksq\u0000~\u0000\u001B\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000@ \u0000\u0000\u0000\u0000\u0000\u0000@\"\u0000\u0000\u0000\u0000\u0000\u0000@\u001C\u0000\u0000\u0000\u0000\u0000\u0000@U@\u0000\u0000\u0000\u0000\u0000@ \u0000\u0000\u0000\u0000\u0000\u0000ppq\u0000~\u00004t\u0000\u0006squirexsq\u0000~\u0000\u001E?@\u0000\u0000\u0000\u0000\u0000\fw\b\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0005t\u0000\u0006Archerq\u0000~\u00000t\u0000\u0004Mageq\u0000~\u00003t\u0000\u0006Knightq\u0000~\u00006t\u0000\u0006Healerq\u0000~\u0000.t\u0000\u0010MythicalCreatureq\u0000~\u0000+xt\u0000\u0007Rivindut\u0000\u0005RI001t\u0000\u0006Riviyasq\u0000~\u0000\u0002@^\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000t\u0000\u0006Arcanesq\u0000~\u0000\u0000\u0000\u0000\u0000\u0005w\u0004\u0000\u0000\u0000\u0005sq\u0000~\u0000\u0017\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000@&\u0000\u0000\u0000\u0000\u0000\u0000@\u0010\u0000\u0000\u0000\u0000\u0000\u0000@\u0018\u0000\u0000\u0000\u0000\u0000\u0000@T\u0000\u0000\u0000\u0000\u0000\u0000@\"\u0000\u0000\u0000\u0000\u0000\u0000ppt\u0000\nHighlandert\u0000\u0007shooterpsq\u0000~\u0000\u0014\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000@$\u0000\u0000\u0000\u0000\u0000\u0000@ \u0000\u0000\u0000\u0000\u0000\u0000@\"\u0000\u0000\u0000\u0000\u0000\u0000@W�\u0000\u0000\u0000\u0000\u0000@\u0018\u0000\u0000\u0000\u0000\u0000\u0000ppt\u0000\bSunchildt\u0000\u0007soothersq\u0000~\u0000\u001B\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000@ \u0000\u0000\u0000\u0000\u0000\u0000@\"\u0000\u0000\u0000\u0000\u0000\u0000@\u001C\u0000\u0000\u0000\u0000\u0000\u0000@U@\u0000\u0000\u0000\u0000\u0000@ \u0000\u0000\u0000\u0000\u0000\u0000ppt\u0000\u000BMarshlandert\u0000\u0006squiresq\u0000~\u0000\t\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000@(\u0000\u0000\u0000\u0000\u0000\u0000@,\u0000\u0000\u0000\u0000\u0000\u0000@.\u0000\u0000\u0000\u0000\u0000\u0000@^\u0000\u0000\u0000\u0000\u0000\u0000@ \u0000\u0000\u0000\u0000\u0000\u0000ppq\u0000~\u0000Ht\u0000\u0006dragonsq\u0000~\u0000\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000pppt\u0000\u000BIllusionistxsq\u0000~\u0000\u001E?@\u0000\u0000\u0000\u0000\u0000\fw\b\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0005t\u0000\u0006Archerq\u0000~\u0000Dt\u0000\u0004Mageq\u0000~\u0000Ot\u0000\u0006Knightq\u0000~\u0000Jt\u0000\u0006Healerq\u0000~\u0000Gt\u0000\u0010MythicalCreatureq\u0000~\u0000Mxt\u0000\tSadanathat\u0000\u0005SA001t\u0000\u000BSadanathayasq\u0000~\u0000\u0002A.��\u0000\u0000\u0000\u0000@j�\u0000\u0000\u0000\u0000\u0000t\u0000\tMarshlandsq\u0000~\u0000\u0000\u0000\u0000\u0000\u0005w\u0004\u0000\u0000\u0000\u0005sq\u0000~\u0000\u001B\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000@ \u0000\u0000\u0000\u0000\u0000\u0000@\"\u0000\u0000\u0000\u0000\u0000\u0000@\u001C\u0000\u0000\u0000\u0000\u0000\u0000@U@\u0000\u0000\u0000\u0000\u0000@ \u0000\u0000\u0000\u0000\u0000\u0000ppt\u0000\u000BMarshlandert\u0000\u0006squiresq\u0000~\u0000\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001@(\u0000\u0000\u0000\u0000\u0000\u0000@\u001C\u0000\u0000\u0000\u0000\u0000\u0000@$\u0000\u0000\u0000\u0000\u0000\u0000@^\u0000\u0000\u0000\u0000\u0000\u0000@(\u0000\u0000\u0000\u0000\u0000\u0000psr\u0000\bArtefactf��n\u001C�\t�\u0002\u0000\u0000xr\u0000\tEquipmentm�}��\u007F�i\u0002\u0000\u0006D\u0000\u0006attackD\u0000\u0007defenceD\u0000\u0006healthD\u0000\u0005priceD\u0000\u0005speedL\u0000\u0004nameq\u0000~\u0000\u0003xp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000t\u0000\u0006amuletq\u0000~\u0000^t\u0000\u0007warlocksq\u0000~\u0000\u0014\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001@(\u0000\u0000\u0000\u0000\u0000\u0000@\"\u0000\u0000\u0000\u0000\u0000\u0000@$\u0000\u0000\u0000\u0000\u0000\u0000@b�\u0000\u0000\u0000\u0000\u0000@\u001C\u0000\u0000\u0000\u0000\u0000\u0000psq\u0000~\u0000a\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000t\u0000\u0006amulett\u0000\nHighlandert\u0000\u0005medicsq\u0000~\u0000\t\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001@(\u0000\u0000\u0000\u0000\u0000\u0000@,\u0000\u0000\u0000\u0000\u0000\u0000@.\u0000\u0000\u0000\u0000\u0000\u0000@b\u0000\u0000\u0000\u0000\u0000\u0000@ \u0000\u0000\u0000\u0000\u0000\u0000psq\u0000~\u0000a\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000t\u0000\u0006amulett\u0000\bSunchildt\u0000\u0006dragonsq\u0000~\u0000\u0017\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000@&\u0000\u0000\u0000\u0000\u0000\u0000@\u0010\u0000\u0000\u0000\u0000\u0000\u0000@\u0018\u0000\u0000\u0000\u0000\u0000\u0000@T\u0000\u0000\u0000\u0000\u0000\u0000@\"\u0000\u0000\u0000\u0000\u0000\u0000ppt\u0000\nHighlandert\u0000\u0007shooterpxsq\u0000~\u0000\u001E?@\u0000\u0000\u0000\u0000\u0000\fw\b\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0005t\u0000\u0006Archerq\u0000~\u0000pt\u0000\u0004Mageq\u0000~\u0000`t\u0000\u0006Knightq\u0000~\u0000]t\u0000\u0006Healerq\u0000~\u0000ft\u0000\u0010MythicalCreatureq\u0000~\u0000kxt\u0000\u0003gort\u0000\u0005WH001t\u0000\twhitewolfsq\u0000~\u0000\u0002@4\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000t\u0000\tHillcrestsq\u0000~\u0000\u0000\u0000\u0000\u0000\u0005w\u0004\u0000\u0000\u0000\u0005sq\u0000~\u0000\u0017\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000@&\u0000\u0000\u0000\u0000\u0000\u0000@\u0010\u0000\u0000\u0000\u0000\u0000\u0000@\u0018\u0000\u0000\u0000\u0000\u0000\u0000@T\u0000\u0000\u0000\u0000\u0000\u0000@\"\u0000\u0000\u0000\u0000\u0000\u0000ppt\u0000\nHighlandert\u0000\u0007shooterpsq\u0000~\u0000\u0014\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000@$\u0000\u0000\u0000\u0000\u0000\u0000@ \u0000\u0000\u0000\u0000\u0000\u0000@\"\u0000\u0000\u0000\u0000\u0000\u0000@W�\u0000\u0000\u0000\u0000\u0000@\u0018\u0000\u0000\u0000\u0000\u0000\u0000ppt\u0000\bSunchildt\u0000\u0007soothersq\u0000~\u0000\u001B\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000@ \u0000\u0000\u0000\u0000\u0000\u0000@\"\u0000\u0000\u0000\u0000\u0000\u0000@\u001C\u0000\u0000\u0000\u0000\u0000\u0000@U@\u0000\u0000\u0000\u0000\u0000@ \u0000\u0000\u0000\u0000\u0000\u0000ppt\u0000\u000BMarshlandert\u0000\u0006squiresq\u0000~\u0000\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000@(\u0000\u0000\u0000\u0000\u0000\u0000@\u001C\u0000\u0000\u0000\u0000\u0000\u0000@$\u0000\u0000\u0000\u0000\u0000\u0000@Y\u0000\u0000\u0000\u0000\u0000\u0000@(\u0000\u0000\u0000\u0000\u0000\u0000ppq\u0000~\u0000�t\u0000\u0007warlocksq\u0000~\u0000\t\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000@(\u0000\u0000\u0000\u0000\u0000\u0000@,\u0000\u0000\u0000\u0000\u0000\u0000@.\u0000\u0000\u0000\u0000\u0000\u0000@^\u0000\u0000\u0000\u0000\u0000\u0000@ \u0000\u0000\u0000\u0000\u0000\u0000ppq\u0000~\u0000�t\u0000\u0006dragonxsq\u0000~\u0000\u001E?@\u0000\u0000\u0000\u0000\u0000\fw\b\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0005t\u0000\u0006Archerq\u0000~\u0000\u007Ft\u0000\u0004Mageq\u0000~\u0000�t\u0000\u0006Knightq\u0000~\u0000�t\u0000\u0006Healerq\u0000~\u0000�t\u0000\u0010MythicalCreatureq\u0000~\u0000�xt\u0000\nHighwayBust\u0000\u0005HI001t\u0000\nHighwayBussq\u0000~\u0000\u0002@4\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000t\u0000\u0006Arcanesq\u0000~\u0000\u0000\u0000\u0000\u0000\u0005w\u0004\u0000\u0000\u0000\u0005sq\u0000~\u0000\u001B\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000@ \u0000\u0000\u0000\u0000\u0000\u0000@\"\u0000\u0000\u0000\u0000\u0000\u0000@\u001C\u0000\u0000\u0000\u0000\u0000\u0000@U@\u0000\u0000\u0000\u0000\u0000@ \u0000\u0000\u0000\u0000\u0000\u0000ppq\u0000~\u0000�t\u0000\u0006squiresq\u0000~\u0000\u0017\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000@&\u0000\u0000\u0000\u0000\u0000\u0000@\u0010\u0000\u0000\u0000\u0000\u0000\u0000@\u0018\u0000\u0000\u0000\u0000\u0000\u0000@T\u0000\u0000\u0000\u0000\u0000\u0000@\"\u0000\u0000\u0000\u0000\u0000\u0000ppq\u0000~\u0000�t\u0000\u0007shooterpsq\u0000~\u0000\u0014\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000@$\u0000\u0000\u0000\u0000\u0000\u0000@ \u0000\u0000\u0000\u0000\u0000\u0000@\"\u0000\u0000\u0000\u0000\u0000\u0000@W�\u0000\u0000\u0000\u0000\u0000@\u0018\u0000\u0000\u0000\u0000\u0000\u0000ppq\u0000~\u0000�t\u0000\u0007soothersq\u0000~\u0000\t\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000@(\u0000\u0000\u0000\u0000\u0000\u0000@,\u0000\u0000\u0000\u0000\u0000\u0000@.\u0000\u0000\u0000\u0000\u0000\u0000@^\u0000\u0000\u0000\u0000\u0000\u0000@ \u0000\u0000\u0000\u0000\u0000\u0000ppq\u0000~\u0000�t\u0000\u0006dragonsq\u0000~\u0000\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000@(\u0000\u0000\u0000\u0000\u0000\u0000@\u001C\u0000\u0000\u0000\u0000\u0000\u0000@$\u0000\u0000\u0000\u0000\u0000\u0000@Y\u0000\u0000\u0000\u0000\u0000\u0000@(\u0000\u0000\u0000\u0000\u0000\u0000ppq\u0000~\u0000�t\u0000\u0007warlockxsq\u0000~\u0000\u001E?@\u0000\u0000\u0000\u0000\u0000\fw\b\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0005q\u0000~\u0000�q\u0000~\u0000�q\u0000~\u0000�q\u0000~\u0000�q\u0000~\u0000�q\u0000~\u0000�q\u0000~\u0000�q\u0000~\u0000�q\u0000~\u0000�q\u0000~\u0000�xt\u0000\u0002iit\u0000\u0005II002t\u0000\u0002iisq\u0000~\u0000\u0002@4\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000t\u0000\tHillcrestsq\u0000~\u0000\u0000\u0000\u0000\u0000\u0005w\u0004\u0000\u0000\u0000\u0005sq\u0000~\u0000\u0014\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000@$\u0000\u0000\u0000\u0000\u0000\u0000@ \u0000\u0000\u0000\u0000\u0000\u0000@\"\u0000\u0000\u0000\u0000\u0000\u0000@W�\u0000\u0000\u0000\u0000\u0000@\u0018\u0000\u0000\u0000\u0000\u0000\u0000ppt\u0000\bSunchildt\u0000\u0007soothersq\u0000~\u0000\u0017\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000@&\u0000\u0000\u0000\u0000\u0000\u0000@\u0010\u0000\u0000\u0000\u0000\u0000\u0000@\u0018\u0000\u0000\u0000\u0000\u0000\u0000@T\u0000\u0000\u0000\u0000\u0000\u0000@\"\u0000\u0000\u0000\u0000\u0000\u0000ppt\u0000\nHighlandert\u0000\u0007shooterpsq\u0000~\u0000\u001B\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000@ \u0000\u0000\u0000\u0000\u0000\u0000@\"\u0000\u0000\u0000\u0000\u0000\u0000@\u001C\u0000\u0000\u0000\u0000\u0000\u0000@U@\u0000\u0000\u0000\u0000\u0000@ \u0000\u0000\u0000\u0000\u0000\u0000ppt\u0000\u000BMarshlandert\u0000\u0006squiresq\u0000~\u0000\t\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000@(\u0000\u0000\u0000\u0000\u0000\u0000@,\u0000\u0000\u0000\u0000\u0000\u0000@.\u0000\u0000\u0000\u0000\u0000\u0000@^\u0000\u0000\u0000\u0000\u0000\u0000@ \u0000\u0000\u0000\u0000\u0000\u0000ppq\u0000~\u0000�t\u0000\u0006dragonsq\u0000~\u0000\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000@(\u0000\u0000\u0000\u0000\u0000\u0000@\u001C\u0000\u0000\u0000\u0000\u0000\u0000@$\u0000\u0000\u0000\u0000\u0000\u0000@Y\u0000\u0000\u0000\u0000\u0000\u0000@(\u0000\u0000\u0000\u0000\u0000\u0000ppq\u0000~\u0000�t\u0000\u0007warlockxsq\u0000~\u0000\u001E?@\u0000\u0000\u0000\u0000\u0000\fw\b\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0005t\u0000\u0006Archerq\u0000~\u0000�t\u0000\u0004Mageq\u0000~\u0000�t\u0000\u0006Knightq\u0000~\u0000�t\u0000\u0006Healerq\u0000~\u0000�t\u0000\u0010MythicalCreatureq\u0000~\u0000�xt\u0000\u0004RIVIt\u0000\u0005RI001t\u0000\u0004RIVIsq\u0000~\u0000\u0002A.�H\u0000\u0000\u0000\u0000@i\u0000\u0000\u0000\u0000\u0000\u0000t\u0000\u0006Arcanesq\u0000~\u0000\u0000\u0000\u0000\u0000\u0005w\u0004\u0000\u0000\u0000\u0005sq\u0000~\u0000\u0014\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000@$\u0000\u0000\u0000\u0000\u0000\u0000@ \u0000\u0000\u0000\u0000\u0000\u0000@\"\u0000\u0000\u0000\u0000\u0000\u0000@W�\u0000\u0000\u0000\u0000\u0000@\u0018\u0000\u0000\u0000\u0000\u0000\u0000ppt\u0000\bSunchildt\u0000\u0007soothersq\u0000~\u0000\u0017\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000@&\u0000\u0000\u0000\u0000\u0000\u0000@\u0010\u0000\u0000\u0000\u0000\u0000\u0000@\u0018\u0000\u0000\u0000\u0000\u0000\u0000@T\u0000\u0000\u0000\u0000\u0000\u0000@\"\u0000\u0000\u0000\u0000\u0000\u0000ppt\u0000\nHighlandert\u0000\u0007shooterpsq\u0000~\u0000\u001B\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000@ \u0000\u0000\u0000\u0000\u0000\u0000@\"\u0000\u0000\u0000\u0000\u0000\u0000@\u001C\u0000\u0000\u0000\u0000\u0000\u0000@U@\u0000\u0000\u0000\u0000\u0000@ \u0000\u0000\u0000\u0000\u0000\u0000ppt\u0000\u000BMarshlandert\u0000\u0006squiresq\u0000~\u0000\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000@(\u0000\u0000\u0000\u0000\u0000\u0000@\u001C\u0000\u0000\u0000\u0000\u0000\u0000@$\u0000\u0000\u0000\u0000\u0000\u0000@Y\u0000\u0000\u0000\u0000\u0000\u0000@(\u0000\u0000\u0000\u0000\u0000\u0000ppq\u0000~\u0000�t\u0000\u0007warlocksq\u0000~\u0000\t\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000@(\u0000\u0000\u0000\u0000\u0000\u0000@,\u0000\u0000\u0000\u0000\u0000\u0000@.\u0000\u0000\u0000\u0000\u0000\u0000@^\u0000\u0000\u0000\u0000\u0000\u0000@ \u0000\u0000\u0000\u0000\u0000\u0000ppq\u0000~\u0000�t\u0000\u0006dragonxsq\u0000~\u0000\u001E?@\u0000\u0000\u0000\u0000\u0000\fw\b\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0005t\u0000\u0006Archerq\u0000~\u0000�t\u0000\u0004Mageq\u0000~\u0000�t\u0000\u0006Knightq\u0000~\u0000�t\u0000\u0006Healerq\u0000~\u0000�t\u0000\u0010MythicalCreatureq\u0000~\u0000�xt\u0000\u0005Hellot\u0000\u0005HE001t\u0000\u0004Heiisq\u0000~\u0000\u0002A.�d\u0000\u0000\u0000\u0000@u`\u0000\u0000\u0000\u0000\u0000t\u0000\tMarshlandsq\u0000~\u0000\u0000\u0000\u0000\u0000\u0005w\u0004\u0000\u0000\u0000\u0005sq\u0000~\u0000\u0014\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000@$\u0000\u0000\u0000\u0000\u0000\u0000@ \u0000\u0000\u0000\u0000\u0000\u0000@\"\u0000\u0000\u0000\u0000\u0000\u0000@W�\u0000\u0000\u0000\u0000\u0000@\u0018\u0000\u0000\u0000\u0000\u0000\u0000ppt\u0000\bSunchildt\u0000\u0007soothersq\u0000~\u0000\u0017\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000@&\u0000\u0000\u0000\u0000\u0000\u0000@\u0010\u0000\u0000\u0000\u0000\u0000\u0000@\u0018\u0000\u0000\u0000\u0000\u0000\u0000@T\u0000\u0000\u0000\u0000\u0000\u0000@\"\u0000\u0000\u0000\u0000\u0000\u0000ppt\u0000\nHighlandert\u0000\u0007shooterpsq\u0000~\u0000\u001B\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000@ \u0000\u0000\u0000\u0000\u0000\u0000@\"\u0000\u0000\u0000\u0000\u0000\u0000@\u001C\u0000\u0000\u0000\u0000\u0000\u0000@U@\u0000\u0000\u0000\u0000\u0000@ \u0000\u0000\u0000\u0000\u0000\u0000ppt\u0000\u000BMarshlandert\u0000\u0006squiresq\u0000~\u0000\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000@(\u0000\u0000\u0000\u0000\u0000\u0000@\u001C\u0000\u0000\u0000\u0000\u0000\u0000@$\u0000\u0000\u0000\u0000\u0000\u0000@Y\u0000\u0000\u0000\u0000\u0000\u0000@(\u0000\u0000\u0000\u0000\u0000\u0000ppq\u0000~\u0000�t\u0000\u0007warlocksq\u0000~\u0000\t\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000@(\u0000\u0000\u0000\u0000\u0000\u0000@,\u0000\u0000\u0000\u0000\u0000\u0000@.\u0000\u0000\u0000\u0000\u0000\u0000@^\u0000\u0000\u0000\u0000\u0000\u0000@ \u0000\u0000\u0000\u0000\u0000\u0000ppq\u0000~\u0000�t\u0000\u0006dragonxsq\u0000~\u0000\u001E?@\u0000\u0000\u0000\u0000\u0000\fw\b\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0005t\u0000\u0006Archerq\u0000~\u0000�t\u0000\u0004Mageq\u0000~\u0000�t\u0000\u0006Knightq\u0000~\u0000�t\u0000\u0006Healerq\u0000~\u0000�t\u0000\u0010MythicalCreatureq\u0000~\u0000�xt\u0000\u0002hit\u0000\u0005HE001t\u0000\u0005hellosq\u0000~\u0000\u0002A.��\u0000\u0000\u0000\u0000@Y\u0000\u0000\u0000\u0000\u0000\u0000t\u0000\u0006Arcanesq\u0000~\u0000\u0000\u0000\u0000\u0000\u0005w\u0004\u0000\u0000\u0000\u0005sq\u0000~\u0000\t\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000@,\u0000\u0000\u0000\u0000\u0000\u0000@2\u0000\u0000\u0000\u0000\u0000\u0000@4\u0000\u0000\u0000\u0000\u0000\u0000@u@\u0000\u0000\u0000\u0000\u0000@4\u0000\u0000\u0000\u0000\u0000\u0000ppt\u0000\u0006Mystict\u0000\u0007pegasussq\u0000~\u0000\u0014\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000@$\u0000\u0000\u0000\u0000\u0000\u0000@ \u0000\u0000\u0000\u0000\u0000\u0000@\"\u0000\u0000\u0000\u0000\u0000\u0000@W�\u0000\u0000\u0000\u0000\u0000@\u0018\u0000\u0000\u0000\u0000\u0000\u0000ppt\u0000\bSunchildt\u0000\u0007soothersq\u0000~\u0000\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000@(\u0000\u0000\u0000\u0000\u0000\u0000@\u001C\u0000\u0000\u0000\u0000\u0000\u0000@$\u0000\u0000\u0000\u0000\u0000\u0000@Y\u0000\u0000\u0000\u0000\u0000\u0000@(\u0000\u0000\u0000\u0000\u0000\u0000ppt\u0000\u000BMarshlandert\u0000\u0007warlocksq\u0000~\u0000\u001B\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000@ \u0000\u0000\u0000\u0000\u0000\u0000@\"\u0000\u0000\u0000\u0000\u0000\u0000@\u001C\u0000\u0000\u0000\u0000\u0000\u0000@U@\u0000\u0000\u0000\u0000\u0000@ \u0000\u0000\u0000\u0000\u0000\u0000ppq\u0000~\u0000�t\u0000\u0006squiresq\u0000~\u0000\u0017\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000@&\u0000\u0000\u0000\u0000\u0000\u0000@\u0010\u0000\u0000\u0000\u0000\u0000\u0000@\u0018\u0000\u0000\u0000\u0000\u0000\u0000@T\u0000\u0000\u0000\u0000\u0000\u0000@\"\u0000\u0000\u0000\u0000\u0000\u0000ppt\u0000\nHighlandert\u0000\u0007shooterpxsq\u0000~\u0000\u001E?@\u0000\u0000\u0000\u0000\u0000\fw\b\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0005t\u0000\u0006Archerq\u0000~\u0000�t\u0000\u0004Mageq\u0000~\u0000�t\u0000\u0006Knightq\u0000~\u0000�t\u0000\u0006Healerq\u0000~\u0000�t\u0000\u0010MythicalCreatureq\u0000~\u0000�xt\u0000\u0006Pakayat\u0000\u0005PK001t\u0000\u0003pkyx
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/out/production/OOP-Project/Data.ser b/out/production/OOP-Project/Data.ser
--- a/out/production/OOP-Project/Data.ser	(revision e91e429b7368b8f06af99a46b7c390a7f18c5813)
+++ b/out/production/OOP-Project/Data.ser	(date 1710753254295)
@@ -1,25 +1,12 @@
-�� sr java.util.ArrayListx����a� I sizexp   
-w   
-sr UserɘŸ�J�b D coinsD xpL 
-homeGroundt Ljava/lang/String;L myArmyt Ljava/util/ArrayList;L 	myArmyMapt Ljava/util/Map;L nameq ~ L userIDq ~ L userNameq ~ xp@4              t 	Hillcrestsq ~     w   sr MythicalCreature��u���  xr 	Charactery�W�R� I armourCountI 
+�� sr java.util.ArrayListx����a� I sizexp   w   sr User        I coinsD xpL 
+homeGroundt Ljava/lang/String;L myArmyt Ljava/util/ArrayList;L 	myArmyMapt Ljava/util/Map;L nameq ~ L userIDq ~ L userNameq ~ xp           t 	Hillcrestsq ~     w   sr MythicalCreature��u���  xr 	Charactery�W�R� I armourCountI 
 artefactCountD attackD defenceD healthD priceD speedL armourt LArmour;L artefactt 
 LArtefact;L 
-characterTypeq ~ L nameq ~ xp        @(      @,      @.      @^      @       ppt Sunchildt dragonsr MageĲ+�Q��  xq ~ 
-        @(      @      @$      @Y      @(      ppt Marshlandert warlocksr Healer�yQӪ  xq ~ 
+characterTypeq ~ L nameq ~ xp        @(      @,      @.      @^      @       ppt Sunchildt dragonsr Healer�yQӪ  xq ~ 
         @$      @       @"      @W�     @      ppq ~ t soothersr ArcherL�RA'[� L nameq ~ xq ~ 
         @&      @      @      @T      @"      ppt 
 Highlandert shooterpsr Knight>�b��W  xq ~ 
-        @       @"      @      @U@     @       ppq ~ t squirexsr java.util.HashMap���`� F 
-loadFactorI 	thresholdxp?@     w      t Archerq ~ t Mageq ~ t Knightq ~ t Healerq ~ t MythicalCreatureq ~ 
-xt 	muthumalat MU001t muthusq ~ @4              t 	Hillcrestsq ~     w   sq ~ 	        @(      @,      @.      @^      @       ppt Sunchildt dragonsq ~         @$      @       @"      @W�     @      ppq ~ ,t soothersq ~         @&      @      @      @T      @"      ppt 
-Highlandert shooterpsq ~         @(      @      @$      @Y      @(      ppt Marshlandert warlocksq ~         @       @"      @      @U@     @       ppq ~ 4t squirexsq ~ ?@     w      t Archerq ~ 0t Mageq ~ 3t Knightq ~ 6t Healerq ~ .t MythicalCreatureq ~ +xt Rivindut RI001t Riviyasq ~ @^              t Arcanesq ~     w   sq ~         @&      @      @      @T      @"      ppt 
-Highlandert shooterpsq ~         @$      @       @"      @W�     @      ppt Sunchildt soothersq ~         @       @"      @      @U@     @       ppt Marshlandert squiresq ~ 	        @(      @,      @.      @^      @       ppq ~ Ht dragonsq ~                                                 pppt Illusionistxsq ~ ?@     w      t Archerq ~ Dt Mageq ~ Ot Knightq ~ Jt Healerq ~ Gt MythicalCreatureq ~ Mxt 	Sadanathat SA001t Sadanathayasq ~ A.��    @j�     t 	Marshlandsq ~     w   sq ~         @       @"      @      @U@     @       ppt Marshlandert squiresq ~        @(      @      @$      @^      @(      psr Artefactf��n�	�  xr 	Equipmentm�}���i D attackD defenceD healthD priceD speedL nameq ~ xp                                        t amuletq ~ ^t warlocksq ~        @(      @"      @$      @b�     @      psq ~ a                                        t amulett 
-Highlandert medicsq ~ 	       @(      @,      @.      @b      @       psq ~ a                                        t amulett Sunchildt dragonsq ~         @&      @      @      @T      @"      ppt 
-Highlandert shooterpxsq ~ ?@     w      t Archerq ~ pt Mageq ~ `t Knightq ~ ]t Healerq ~ ft MythicalCreatureq ~ kxt gort WH001t 	whitewolfsq ~ @4              t 	Hillcrestsq ~     w   sq ~         @&      @      @      @T      @"      ppt 
-Highlandert shooterpsq ~         @$      @       @"      @W�     @      ppt Sunchildt soothersq ~         @       @"      @      @U@     @       ppt Marshlandert squiresq ~         @(      @      @$      @Y      @(      ppq ~ �t warlocksq ~ 	        @(      @,      @.      @^      @       ppq ~ �t dragonxsq ~ ?@     w      t Archerq ~ t Mageq ~ �t Knightq ~ �t Healerq ~ �t MythicalCreatureq ~ �xt 
-HighwayBust HI001t 
-HighwayBussq ~ @4              t Arcanesq ~     w   sq ~         @       @"      @      @U@     @       ppq ~ �t squiresq ~         @&      @      @      @T      @"      ppq ~ �t shooterpsq ~         @$      @       @"      @W�     @      ppq ~ �t soothersq ~ 	        @(      @,      @.      @^      @       ppq ~ �t dragonsq ~         @(      @      @$      @Y      @(      ppq ~ �t warlockxsq ~ ?@     w      q ~ �q ~ �q ~ �q ~ �q ~ �q ~ �q ~ �q ~ �q ~ �q ~ �xt iit II002t iisq ~ @4              t 	Hillcrestsq ~     w   sq ~         @$      @       @"      @W�     @      ppt Sunchildt soothersq ~         @&      @      @      @T      @"      ppt 
-Highlandert shooterpsq ~         @       @"      @      @U@     @       ppt Marshlandert squiresq ~ 	        @(      @,      @.      @^      @       ppq ~ �t dragonsq ~         @(      @      @$      @Y      @(      ppq ~ �t warlockxsq ~ ?@     w      t Archerq ~ �t Mageq ~ �t Knightq ~ �t Healerq ~ �t MythicalCreatureq ~ �xt RIVIt RI001t RIVIsq ~ A.�H    @i      t Arcanesq ~     w   sq ~         @$      @       @"      @W�     @      ppt Sunchildt soothersq ~         @&      @      @      @T      @"      ppt 
-Highlandert shooterpsq ~         @       @"      @      @U@     @       ppt Marshlandert squiresq ~         @(      @      @$      @Y      @(      ppq ~ �t warlocksq ~ 	        @(      @,      @.      @^      @       ppq ~ �t dragonxsq ~ ?@     w      t Archerq ~ �t Mageq ~ �t Knightq ~ �t Healerq ~ �t MythicalCreatureq ~ �xt Hellot HE001t Heiisq ~ A.�d    @u`     t 	Marshlandsq ~     w   sq ~         @$      @       @"      @W�     @      ppt Sunchildt soothersq ~         @&      @      @      @T      @"      ppt 
-Highlandert shooterpsq ~         @       @"      @      @U@     @       ppt Marshlandert squiresq ~         @(      @      @$      @Y      @(      ppq ~ �t warlocksq ~ 	        @(      @,      @.      @^      @       ppq ~ �t dragonxsq ~ ?@     w      t Archerq ~ �t Mageq ~ �t Knightq ~ �t Healerq ~ �t MythicalCreatureq ~ �xt hit HE001t hellosq ~ A.��    @Y      t Arcanesq ~     w   sq ~ 	        @,      @2      @4      @u@     @4      ppt Mystict pegasussq ~         @$      @       @"      @W�     @      ppt Sunchildt soothersq ~         @(      @      @$      @Y      @(      ppt Marshlandert warlocksq ~         @       @"      @      @U@     @       ppq ~ �t squiresq ~         @&      @      @      @T      @"      ppt 
-Highlandert shooterpxsq ~ ?@     w      t Archerq ~ �t Mageq ~ �t Knightq ~ �t Healerq ~ �t MythicalCreatureq ~ �xt Pakayat PK001t pkyx
\ No newline at end of file
+        @       @"      @      @U@     @       ppt Marshlandert squiresr MageĲ+�Q��  xq ~ 
+        @(      @      @$      @Y      @(      ppq ~ t warlockxsr java.util.HashMap���`� F 
+loadFactorI 	thresholdxp?@     w      t Archerq ~ t Mageq ~ t Knightq ~ t Healerq ~ t MythicalCreatureq ~ 
+xt 	muthumalat MU001t muthusq ~            t 	Marshlandsq ~     w   sq ~ 	        @(      @,      @.      @^      @       ppq ~ t dragonsq ~         @$      @       @"      @W�     @      ppq ~ t soothersq ~         @&      @      @      @T      @"      ppq ~ t shooterpsq ~         @(      @      @$      @Y      @(      ppq ~ t warlocksq ~         @       @"      @      @U@     @       ppq ~ t squirexsq ~ ?@     w      q ~  q ~ /q ~ !q ~ 1q ~ "q ~ 3q ~ #q ~ -q ~ $q ~ +xt pkyat PK002t pkx
\ No newline at end of file
Index: MythicalCreature.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>public class MythicalCreature extends Character {\n    public MythicalCreature(String name){\n        super(name);\n        this.createArcher(name);\n    }\n    private void createArcher(String name){\n        switch (name){\n            case \"dragon\":\n                this.setPrice(120);\n                this.setAttack(12);\n                this.setDefence(14);\n                this.setHealth(15);\n                this.setSpeed(8);\n                this.setCharacterType(\"Sunchild\");\n                break;\n            case \"basilisk\":\n                this.setPrice(165);\n                this.setAttack(15);\n                this.setDefence(11);\n                this.setHealth(10);\n                this.setSpeed(12);\n                this.setCharacterType(\"Marshlander\");\n                break;\n            case \"hydra\":\n                this.setPrice(205);\n                this.setAttack(12);\n                this.setDefence(16);\n                this.setHealth(15);\n                this.setSpeed(11);\n                this.setCharacterType(\"Marshlander\");\n                break;\n            case \"phoenix\":\n                this.setPrice(275);\n                this.setAttack(17);\n                this.setDefence(13);\n                this.setHealth(17);\n                this.setSpeed(19);\n                this.setCharacterType(\"Sunchild\");\n                break;\n            case \"pegasus\":\n                this.setPrice(340);\n                this.setAttack(14);\n                this.setDefence(18);\n                this.setHealth(20);\n                this.setSpeed(20);\n                this.setCharacterType(\"Mystic\");\n                break;\n        }\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/MythicalCreature.java b/MythicalCreature.java
--- a/MythicalCreature.java	(revision e91e429b7368b8f06af99a46b7c390a7f18c5813)
+++ b/MythicalCreature.java	(date 1710753150021)
@@ -47,4 +47,5 @@
                 break;
         }
     }
+
 }
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"AutoImportSettings\">\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\n  </component>\n  <component name=\"ChangeListManager\">\n    <list default=\"true\" id=\"87e91578-e36f-49b2-872f-3b028a72cd1b\" name=\"Changes\" comment=\"\">\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/War.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/War.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/out/production/OOP-Project/War.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/out/production/OOP-Project/War.class\" afterDir=\"false\" />\n    </list>\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\n  </component>\n  <component name=\"Git.Settings\">\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$/..\" />\n  </component>\n  <component name=\"ProjectColorInfo\"><![CDATA[{\n  \"customColor\": \"\",\n  \"associatedIndex\": 3\n}]]></component>\n  <component name=\"ProjectId\" id=\"2dqeRHx8T8FNTZqfgxxr1Y3Nrez\" />\n  <component name=\"ProjectViewState\">\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\n    <option name=\"showLibraryContents\" value=\"true\" />\n  </component>\n  <component name=\"PropertiesComponent\"><![CDATA[{\n  \"keyToString\": {\n    \"Application.Main.executor\": \"Run\",\n    \"Application.Mystic Mayhem.executor\": \"Run\",\n    \"RunOnceActivity.OpenProjectViewOnStart\": \"true\",\n    \"RunOnceActivity.ShowReadmeOnStart\": \"true\",\n    \"SHARE_PROJECT_CONFIGURATION_FILES\": \"true\",\n    \"git-widget-placeholder\": \"main\",\n    \"kotlin-language-version-configured\": \"true\",\n    \"last_opened_file_path\": \"C:/Github/PC_Projects/OOP-Project/.idea\",\n    \"node.js.detected.package.eslint\": \"true\",\n    \"node.js.detected.package.tslint\": \"true\",\n    \"node.js.selected.package.eslint\": \"(autodetect)\",\n    \"node.js.selected.package.tslint\": \"(autodetect)\",\n    \"nodejs_package_manager_path\": \"npm\",\n    \"settings.editor.selected.configurable\": \"reference.projectsettings.compiler.excludes\",\n    \"vue.rearranger.settings.migration\": \"true\"\n  }\n}]]></component>\n  <component name=\"RunManager\">\n    <configuration name=\"Mystic Mayhem\" type=\"Application\" factoryName=\"Application\">\n      <option name=\"MAIN_CLASS_NAME\" value=\"Main\" />\n      <module name=\"OOP-Project\" />\n      <method v=\"2\">\n        <option name=\"Make\" enabled=\"true\" />\n      </method>\n    </configuration>\n  </component>\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\n  <component name=\"TaskManager\">\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\n      <changelist id=\"87e91578-e36f-49b2-872f-3b028a72cd1b\" name=\"Changes\" comment=\"\" />\n      <created>1710740027901</created>\n      <option name=\"number\" value=\"Default\" />\n      <option name=\"presentableId\" value=\"Default\" />\n      <updated>1710740027901</updated>\n      <workItem from=\"1710740029328\" duration=\"4183000\" />\n    </task>\n    <servers />\n  </component>\n  <component name=\"TypeScriptGeneratedFilesManager\">\n    <option name=\"version\" value=\"3\" />\n  </component>\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision e91e429b7368b8f06af99a46b7c390a7f18c5813)
+++ b/.idea/workspace.xml	(date 1710753466145)
@@ -4,10 +4,17 @@
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="87e91578-e36f-49b2-872f-3b028a72cd1b" name="Changes" comment="">
+    <list default="true" id="87e91578-e36f-49b2-872f-3b028a72cd1b" name="Changes" comment="war hari eka">
+      <change afterPath="$PROJECT_DIR$/.idea/artifacts/OOP_Project_jar.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/artifacts/OOP_Project_jar2.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/META-INF/MANIFEST.MF" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/Data.ser" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/Menu.java" beforeDir="false" afterPath="$PROJECT_DIR$/Menu.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/MythicalCreature.java" beforeDir="false" afterPath="$PROJECT_DIR$/MythicalCreature.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/War.java" beforeDir="false" afterPath="$PROJECT_DIR$/War.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/out/production/OOP-Project/War.class" beforeDir="false" afterPath="$PROJECT_DIR$/out/production/OOP-Project/War.class" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/out/production/OOP-Project/Data.ser" beforeDir="false" afterPath="$PROJECT_DIR$/out/production/OOP-Project/Data.ser" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/out/production/OOP-Project/Menu.class" beforeDir="false" afterPath="$PROJECT_DIR$/out/production/OOP-Project/Menu.class" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -17,34 +24,37 @@
   <component name="Git.Settings">
     <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$/.." />
   </component>
-  <component name="ProjectColorInfo"><![CDATA[{
-  "customColor": "",
-  "associatedIndex": 3
-}]]></component>
+  <component name="ProjectColorInfo">{
+  &quot;customColor&quot;: &quot;&quot;,
+  &quot;associatedIndex&quot;: 3
+}</component>
   <component name="ProjectId" id="2dqeRHx8T8FNTZqfgxxr1Y3Nrez" />
+  <component name="ProjectLevelVcsManager">
+    <ConfirmationsSetting value="2" id="Add" />
+  </component>
   <component name="ProjectViewState">
     <option name="hideEmptyMiddlePackages" value="true" />
     <option name="showLibraryContents" value="true" />
   </component>
-  <component name="PropertiesComponent"><![CDATA[{
-  "keyToString": {
-    "Application.Main.executor": "Run",
-    "Application.Mystic Mayhem.executor": "Run",
-    "RunOnceActivity.OpenProjectViewOnStart": "true",
-    "RunOnceActivity.ShowReadmeOnStart": "true",
-    "SHARE_PROJECT_CONFIGURATION_FILES": "true",
-    "git-widget-placeholder": "main",
-    "kotlin-language-version-configured": "true",
-    "last_opened_file_path": "C:/Github/PC_Projects/OOP-Project/.idea",
-    "node.js.detected.package.eslint": "true",
-    "node.js.detected.package.tslint": "true",
-    "node.js.selected.package.eslint": "(autodetect)",
-    "node.js.selected.package.tslint": "(autodetect)",
-    "nodejs_package_manager_path": "npm",
-    "settings.editor.selected.configurable": "reference.projectsettings.compiler.excludes",
-    "vue.rearranger.settings.migration": "true"
+  <component name="PropertiesComponent">{
+  &quot;keyToString&quot;: {
+    &quot;Application.Main.executor&quot;: &quot;Run&quot;,
+    &quot;Application.Mystic Mayhem.executor&quot;: &quot;Run&quot;,
+    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
+    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
+    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,
+    &quot;git-widget-placeholder&quot;: &quot;main&quot;,
+    &quot;kotlin-language-version-configured&quot;: &quot;true&quot;,
+    &quot;last_opened_file_path&quot;: &quot;C:/Github/PC_Projects/OOP-Project/.idea&quot;,
+    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
+    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,
+    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
+    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,
+    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,
+    &quot;settings.editor.selected.configurable&quot;: &quot;reference.projectsettings.compiler.excludes&quot;,
+    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;
   }
-}]]></component>
+}</component>
   <component name="RunManager">
     <configuration name="Mystic Mayhem" type="Application" factoryName="Application">
       <option name="MAIN_CLASS_NAME" value="Main" />
@@ -64,9 +74,30 @@
       <updated>1710740027901</updated>
       <workItem from="1710740029328" duration="4183000" />
     </task>
+    <task id="LOCAL-00001" summary="war hari eka">
+      <option name="closed" value="true" />
+      <created>1710752163656</created>
+      <option name="number" value="00001" />
+      <option name="presentableId" value="LOCAL-00001" />
+      <option name="project" value="LOCAL" />
+      <updated>1710752163656</updated>
+    </task>
+    <task id="LOCAL-00002" summary="war hari eka">
+      <option name="closed" value="true" />
+      <created>1710752356729</created>
+      <option name="number" value="00002" />
+      <option name="presentableId" value="LOCAL-00002" />
+      <option name="project" value="LOCAL" />
+      <updated>1710752356729</updated>
+    </task>
+    <option name="localTasksCounter" value="3" />
     <servers />
   </component>
   <component name="TypeScriptGeneratedFilesManager">
     <option name="version" value="3" />
   </component>
+  <component name="VcsManagerConfiguration">
+    <MESSAGE value="war hari eka" />
+    <option name="LAST_COMMIT_MESSAGE" value="war hari eka" />
+  </component>
 </project>
\ No newline at end of file
Index: META-INF/MANIFEST.MF
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/META-INF/MANIFEST.MF b/META-INF/MANIFEST.MF
new file mode 100644
--- /dev/null	(date 1710753150041)
+++ b/META-INF/MANIFEST.MF	(date 1710753150041)
@@ -0,0 +1,3 @@
+Manifest-Version: 1.0
+Main-Class: Main
+
Index: .idea/artifacts/OOP_Project_jar2.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/artifacts/OOP_Project_jar2.xml b/.idea/artifacts/OOP_Project_jar2.xml
new file mode 100644
--- /dev/null	(date 1710753150001)
+++ b/.idea/artifacts/OOP_Project_jar2.xml	(date 1710753150001)
@@ -0,0 +1,8 @@
+<component name="ArtifactManager">
+  <artifact type="jar" name="OOP-Project:jar2">
+    <output-path>$PROJECT_DIR$/out/artifacts/OOP_Project_jar2</output-path>
+    <root id="archive" name="OOP-Project.jar">
+      <element id="module-output" name="OOP-Project" />
+    </root>
+  </artifact>
+</component>
\ No newline at end of file
Index: .idea/artifacts/OOP_Project_jar.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/artifacts/OOP_Project_jar.xml b/.idea/artifacts/OOP_Project_jar.xml
new file mode 100644
--- /dev/null	(date 1710753150029)
+++ b/.idea/artifacts/OOP_Project_jar.xml	(date 1710753150029)
@@ -0,0 +1,8 @@
+<component name="ArtifactManager">
+  <artifact type="jar" name="OOP-Project:jar">
+    <output-path>$PROJECT_DIR$/../../..</output-path>
+    <root id="archive" name="OOP-Project.jar">
+      <element id="module-output" name="OOP-Project" />
+    </root>
+  </artifact>
+</component>
\ No newline at end of file
