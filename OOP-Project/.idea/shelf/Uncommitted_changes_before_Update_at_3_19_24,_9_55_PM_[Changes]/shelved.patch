Index: War.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import java.util.*;\n\npublic class War {\n    User initialChallenger;\n    User initialOpponent;\n    Vector<Character> challengerArmy;\n    Vector<Character> opponentArmy;\n\n    private Vector<Character> challengerArmyAttackingArray;\n    private Vector<Character> opponentArmyAttackingArray;\n    private Vector<Character> challengerArmyDefendingArray;\n    private Vector<Character> opponentArmyDefendingArray;\n    private Vector<Character> opponentArmyHealingArray;\n    private Vector<Character> challengerArmyHealingArray;\n\n    public War(User initialChallenger,User initialOpponent){\n        this.initialChallenger = initialChallenger;\n        this.initialOpponent = initialOpponent;\n        this.startWar();\n    }\n\n    private void initialingArrays(Vector<Character> challengerArmy, Vector<Character> opponentArmy){\n        this.challengerArmyAttackingArray = new Vector<>(attackPriorityCheck(challengerArmy));\n        this.opponentArmyAttackingArray = new Vector<>(attackPriorityCheck(opponentArmy));\n        this.opponentArmyDefendingArray = new Vector<>(defencePriorityCheck(opponentArmy));\n        this.challengerArmyDefendingArray = new Vector<>(defencePriorityCheck(challengerArmy));\n        this.opponentArmyHealingArray = new Vector<>(opponentArmy);\n        this.challengerArmyHealingArray = new Vector<>(challengerArmy);\n        this.opponentArmyHealingArray.sort(Comparator.comparingDouble(Character::getHealth));\n        this.challengerArmyHealingArray.sort(Comparator.comparingDouble(Character::getHealth));\n    }\n\n    public Vector<Character> attackPriorityCheck(Vector<Character> list){\n        list.sort(Comparator.comparingDouble(Character::getSpeed)\n                .thenComparing(character -> {\n                    if (character instanceof Healer) return 1;\n                    else if (character instanceof Mage) return 2;\n                    else if (character instanceof MythicalCreature) return 3;\n                    else if (character instanceof Knight) return 4;\n                    else return 5;\n                }).reversed());\n        return list;\n    }\n\n    public Vector<Character> defencePriorityCheck(Vector<Character> list){\n        list.sort(Comparator.comparingDouble(Character::getDefence)\n                .thenComparing(character -> {\n                    if (character instanceof Mage) return 1;\n                    else if (character instanceof Knight) return 2;\n                    else if (character instanceof Archer) return 3;\n                    else if (character instanceof MythicalCreature) return 4;\n                    else return 5;\n                }));\n        return list;\n    }\n\n    void startWar(){\n        this.challengerArmy = new Vector<>();\n        for (Character character : initialChallenger.getArmy()) {\n            this.challengerArmy.add(character.clone());\n        }\n        this.opponentArmy = new Vector<>();\n        for (Character character : initialOpponent.getArmy()) {\n            this.opponentArmy.add(character.clone());\n        }\n        for (Character character : challengerArmy){\n            switch (initialOpponent.getHomeGround()) {\n                case \"Hillcrest\" -> {\n                    if (character.getCharacterType().equals(\"Highlander\")) {\n                        character.setAttack(character.getAttack() + 1);\n                        character.setDefence(character.getDefence() + 1);\n                    }\n                    if (character.getCharacterType().equals(\"Marshlander\")) {\n                        character.setSpeed(character.getSpeed() - 1);\n                    }\n                    if (character.getCharacterType().equals(\"Sunchild\")) {\n                        character.setSpeed(character.getSpeed() - 1);\n                    }\n                }\n                case \"Marshland\" -> {\n                    if (character.getCharacterType().equals(\"Marshlander\")) {\n                        character.setDefence(character.getDefence() + 2);\n                    }\n                    if (character.getCharacterType().equals(\"Sunchild\")) {\n                        character.setAttack(character.getAttack() - 1);\n                    }\n                    if (character.getCharacterType().equals(\"Mystic\")) {\n                        character.setSpeed(character.getSpeed() - 1);\n                    }\n                }\n                case \"Desert\" -> {\n                    if (character.getCharacterType().equals(\"Marshlander\")) {\n                        character.setHealth(character.getHealth() - 1);\n                    }\n                    if (character.getCharacterType().equals(\"Sunchild\")) {\n                        character.setAttack(character.getAttack() + 1);\n                    }\n                }\n                case \"Arcane\" -> {\n                    if (character.getCharacterType().equals(\"Mystic\")) {\n                        character.setAttack(character.getAttack() + 2);\n                    }\n                    if (character.getCharacterType().equals(\"Highlander\")) {\n                        character.setSpeed(character.getSpeed() - 1);\n                        character.setDefence(character.getDefence() - 1);\n                    }\n                    if (character.getCharacterType().equals(\"Marshlander\")) {\n                        character.setSpeed(character.getSpeed() - 1);\n                        character.setDefence(character.getDefence() - 1);\n                    }\n                }\n            }\n        }\n        for(Character character:opponentArmy){\n            switch (initialOpponent.getHomeGround()) {\n                case \"Hillcrest\" -> {\n                    if (character.getCharacterType().equals(\"Highlander\")) {\n                        character.setAttack(character.getAttack() + 1);\n                        character.setDefence(character.getDefence() + 1);\n                    }\n                    if (character.getCharacterType().equals(\"Marshlander\")) {\n                        character.setSpeed(character.getSpeed() - 1);\n                    }\n                    if (character.getCharacterType().equals(\"Sunchild\")) {\n                        character.setSpeed(character.getSpeed() - 1);\n                    }\n                }\n                case \"Marshland\" -> {\n                    if (character.getCharacterType().equals(\"Marshlander\")) {\n                        character.setDefence(character.getDefence() + 2);\n                    }\n                    if (character.getCharacterType().equals(\"Sunchild\")) {\n                        character.setAttack(character.getAttack() - 1);\n                    }\n                    if (character.getCharacterType().equals(\"Mystic\")) {\n                        character.setSpeed(character.getSpeed() - 1);\n                    }\n                }\n                case \"Desert\" -> {\n                    if (character.getCharacterType().equals(\"Marshlander\")) {\n                        character.setHealth(character.getHealth() - 1);\n                    }\n                    if (character.getCharacterType().equals(\"Sunchild\")) {\n                        character.setAttack(character.getAttack() + 1);\n                    }\n                }\n                case \"Arcane\" -> {\n                    if (character.getCharacterType().equals(\"Mystic\")) {\n                        character.setAttack(character.getAttack() + 2);\n                    }\n                    if (character.getCharacterType().equals(\"Highlander\")) {\n                        character.setSpeed(character.getSpeed() - 1);\n                        character.setDefence(character.getDefence() - 1);\n                    }\n                    if (character.getCharacterType().equals(\"Marshlander\")) {\n                        character.setSpeed(character.getSpeed() - 1);\n                        character.setDefence(character.getDefence() - 1);\n                    }\n                }\n            }\n        }\n        initialingArrays(challengerArmy, opponentArmy);\n\n        Iterator<Character> challengerHealingIterator = challengerArmyHealingArray.iterator();\n        while (challengerHealingIterator.hasNext()) {\n            Character character = challengerHealingIterator.next();\n            if (character instanceof Healer) {\n                challengerHealingIterator.remove();\n            }\n        }\n\n        Iterator<Character> opponentHealingIterator = opponentArmyHealingArray.iterator();\n        while (opponentHealingIterator.hasNext()) {\n            Character character = opponentHealingIterator.next();\n            if (character instanceof Healer) {\n                opponentHealingIterator.remove();\n            }\n        }\n        boolean attackingSide = false;\n        int turn = 1;\n        double previousHealth = opponentArmyDefendingArray.getFirst().getHealth();\n        int ci = 0;\n        int oi = 0;\n\n        System.out.println(\"\\n\\n\" + initialChallenger.getUserName() + \"  VS  \" + initialOpponent.getUserName() + \"\\n\");\n\n        while (true) {\n            if (!attackingSide) {\n                System.out.println(\"\\nTurn \" + turn + \": \" + initialChallenger.getUserName());\n\n                if(!(challengerArmyAttackingArray.getFirst() instanceof Healer)) {\n                    System.out.println(String.format(\"** %s's %s attacks %s's %s **\",\n                            initialChallenger.getUserName(),\n                            challengerArmyAttackingArray.get(ci).getName(),\n                            initialOpponent.getUserName(),\n                            opponentArmyDefendingArray.getFirst().getName()));\n\n                    double damage = 0.5 * (challengerArmyAttackingArray.get(ci).getAttack()) - 0.1 * (opponentArmyDefendingArray.getFirst().getDefence());\n\n                    opponentArmyDefendingArray.get(0).setHealth(opponentArmyDefendingArray.get(0).getHealth() - damage);\n\n                    //System.out.println(opponentArmyDefendingArray.getFirst().getName()+\"'s health reduce by \" + damage + \" by the attack of \" + challengerArmyAttackingArray.get(ci).getName());\n\n                    if(initialChallenger.getHomeGround().equals(\"Hillcrest\") && challengerArmyAttackingArray.get(ci).getCharacterType().equals(\"Highlander\")){\n                        double bonusDamage = 0.5 * (challengerArmyAttackingArray.get(ci).getAttack()*0.2) - 0.1 * (opponentArmyDefendingArray.get(0).getDefence());\n\n                        opponentArmyDefendingArray.get(0).setHealth(opponentArmyDefendingArray.get(0).getHealth() - bonusDamage);\n                    }\n                    if (turn != 1){\n                        if(initialChallenger.getHomeGround().equals(\"Arcane\") && opponentArmyDefendingArray.get(0).getCharacterType().equals(\"Mystics\")){\n                            opponentArmyDefendingArray.get(0).setHealth(previousHealth*1.1);\n                        }\n                    }\n                    System.out.println(String.format(\"-- %s's %s's health: %s\",\n                            initialOpponent.getUserName(),\n                            opponentArmyDefendingArray.getFirst().getName(),\n                            opponentArmyDefendingArray.getFirst().getHealth()));\n\n                    System.out.println(String.format(\"-- %s's %s's health: %s\",\n                            initialChallenger.getUserName(),\n                            challengerArmyAttackingArray.getFirst().getName(),\n                            challengerArmyAttackingArray.getFirst().getHealth()));\n\n                    if(opponentArmyDefendingArray.getFirst().getHealth() <= 0){\n                        System.out.println(initialOpponent.getUserName() + \"'s \" + opponentArmyDefendingArray.getFirst().getName()+\" Died!\");\n\n                        Character deadCharacter = opponentArmyDefendingArray.getFirst();\n\n                        opponentArmyDefendingArray.remove(deadCharacter);\n                        opponentArmyHealingArray.remove(deadCharacter);\n                        opponentArmyAttackingArray.remove(deadCharacter);\n\n                        if (opponentArmyAttackingArray.isEmpty()){\n                            break;\n                        }\n                    }\n\n                }\n                else{\n                    challengerArmyHealingArray.sort(Comparator.comparingDouble(Character::getHealth));;\n\n                    double healvalue = 0.1*(challengerArmyHealingArray.get(0).getAttack());\n\n                    challengerArmyHealingArray.get(0).setHealth(challengerArmyHealingArray.get(0).getHealth() + healvalue);\n\n                    System.out.println(String.format(\"-- %s's %s heals %s's %s\",\n                            initialChallenger.getUserName(),\n                            challengerArmyAttackingArray.get(ci).getName(),\n                            initialChallenger.getUserName(),\n                            challengerArmyHealingArray.getFirst().getName()));\n\n\n                    Character healedchar = challengerArmyHealingArray.get(0);\n\n                    for (Character character : opponentArmyDefendingArray) {\n                        if(character.getName().equals(healedchar.getName())){\n                            character.setHealth(character.getHealth()+healvalue);\n                        }\n                    }\n\n                    System.out.println(String.format(\"-- %s's %s's health: %s\",\n                            initialChallenger.getUserName(),\n                            challengerArmyHealingArray.getFirst().getName(),\n                            challengerArmyHealingArray.getFirst().getHealth()));\n\n                    System.out.println(String.format(\"-- %s's %s's health: %s\",\n                            initialChallenger.getUserName(),\n                            challengerArmyAttackingArray.get(ci).getName(),\n                            challengerArmyAttackingArray.get(ci).getHealth()));\n                }\n                attackingSide = true;\n                ci++;\n            }\n            else{\n                System.out.println(\"\\nTurn \" + turn + \": \" + initialOpponent.getUserName());\n\n                if(!(opponentArmyAttackingArray.getFirst() instanceof Healer)) {\n                    System.out.println(String.format(\"** %s's %s attacks %s's %s **\",\n                            initialOpponent.getUserName(),\n                            opponentArmyAttackingArray.get(oi).getName(),\n                            initialChallenger.getUserName(),\n                            challengerArmyDefendingArray.getFirst().getName()));\n\n                    double dmg = 0.5 * (opponentArmyAttackingArray.get(oi).getAttack()) - 0.1 * (challengerArmyDefendingArray.get(0).getDefence());\n\n                    challengerArmyDefendingArray.get(0).setHealth(challengerArmyDefendingArray.get(0).getHealth() - dmg);\n\n                    //System.out.println(challengerArmyDefendingArray.get(0).getName() + \"'s health reduce by \" + dmg + \" by the attack of \" + opponentArmyAttackingArray.get(oi).getName());\n\n                    if(initialChallenger.getHomeGround().equals(\"Hillcrest\") && opponentArmyAttackingArray.get(0).getCharacterType().equals(\"Highlander\")){\n\n                        double bonusdmg = 0.5 * (opponentArmyAttackingArray.get(oi).getAttack()*0.2) - 0.1 * (challengerArmyDefendingArray.get(0).getDefence());\n\n                        opponentArmyDefendingArray.get(0).setHealth(opponentArmyDefendingArray.get(0).getHealth() - bonusdmg);\n                    }\n                    if(turn != 1){\n                        if(initialChallenger.getHomeGround().equals(\"Arcane\") && challengerArmyDefendingArray.get(0).getCharacterType().equals(\"Mystics\")){\n                            challengerArmyDefendingArray.get(0).setHealth(previousHealth*1.1);\n                        }\n                    }\n\n                    System.out.println(String.format(\"-- %s's %s's health: %s\",\n                            initialChallenger.getUserName(),\n                            challengerArmyDefendingArray.getFirst().getName(),\n                            challengerArmyDefendingArray.getFirst().getHealth()));\n\n                    System.out.println(String.format(\"-- %s's %s's health: %s\",\n                            initialOpponent.getUserName(),\n                            opponentArmyAttackingArray.get(oi).getName(),\n                            opponentArmyAttackingArray.get(oi).getHealth()));\n\n                    if(challengerArmyDefendingArray.get(0).getHealth() <= 0){\n                        System.out.println(initialChallenger.getUserName() + \"'s \" + challengerArmyDefendingArray.get(0).getName()+\" Died!\");\n\n                        Character deadCharacter = challengerArmyDefendingArray.getFirst();\n\n                        challengerArmyDefendingArray.remove(deadCharacter);\n                        challengerArmyHealingArray.remove(deadCharacter);\n                        challengerArmyAttackingArray.remove(deadCharacter);\n\n                        if (challengerArmyDefendingArray.isEmpty()){\n                            break;\n                        }\n                    }\n                }\n                else{\n                    double healvalue = 0.1*(challengerArmyHealingArray.get(0).getAttack());\n\n                    challengerArmyHealingArray.get(0).setHealth(challengerArmyHealingArray.get(0).getHealth()+healvalue);\n\n                    System.out.println(String.format(\"-- %s's %s heals %s's %s\",\n                            initialOpponent.getUserName(),\n                            opponentArmyAttackingArray.get(ci).getName(),\n                            initialOpponent.getUserName(),\n                            opponentArmyHealingArray.getFirst().getName()));\n\n                    Character healedchar=challengerArmyHealingArray.get(0);\n\n                    for (Character character : challengerArmyDefendingArray) {\n                        if(character.getName().equals(healedchar.getName())){\n                            character.setHealth(character.getHealth()+healvalue);\n                        }\n                    }\n\n                    System.out.println(String.format(\"-- %s's %s's health: %s\",\n                            initialOpponent.getUserName(),\n                            opponentArmyHealingArray.getFirst().getName(),\n                            opponentArmyHealingArray.getFirst().getHealth()));\n\n                    System.out.println(String.format(\"-- %s's %s's health: %s\",\n                            initialOpponent.getUserName(),\n                            opponentArmyAttackingArray.get(oi).getName(),\n                            opponentArmyAttackingArray.get(oi).getHealth()));\n\n                }\n\n                if (!opponentArmyDefendingArray.isEmpty()) {\n                    previousHealth = opponentArmyDefendingArray.get(0).getHealth();\n                }\n                challengerArmyHealingArray.sort(Comparator.comparingDouble(Character::getHealth));\n                opponentArmyHealingArray.sort(Comparator.comparingDouble(Character::getHealth));\n                attackingSide = false;\n                turn++;\n                oi++;\n\n            }\n            if (oi >= opponentArmyAttackingArray.size()){\n                oi = 0;\n            }\n\n            if (ci >= challengerArmyAttackingArray.size()){\n                ci = 0;\n            }\n\n            if(turn > 10){\n                System.out.println(\"\\n-------WarEnded------\\n\");\n                break;\n            }\n        }\n\n        System.out.println(\"------Result----------\");\n        if(opponentArmyAttackingArray.isEmpty()) {\n            System.out.println(initialChallenger.getName().toUpperCase() + \"Won!\" );\n            initialChallenger.setXp(1);\n            initialChallenger.setCoins((int) (initialOpponent.getCoins()*0.1));\n            initialOpponent.setCoins((int)(-initialOpponent.getCoins()*0.1));\n        } else if (challengerArmyAttackingArray.isEmpty()) {\n            System.out.println(initialOpponent.getName().toUpperCase() +\"Won!\" );\n            initialOpponent.setXp(1);\n            initialOpponent.setCoins((int) (initialChallenger.getCoins()*0.1));\n            initialChallenger.setCoins((int) (-initialChallenger.getCoins()*0.1));\n        }\n        else{\n            System.out.println(\"Drawn!\");\n        }\n        System.out.println(\"----------------------\");\n        System.out.println(initialChallenger.getUserName()  + \" | XP: \" + Math.round(initialChallenger.getXp()) + \" | gold coins: \" + Math.round(initialChallenger.getCoins()));\n        System.out.println(initialOpponent.getUserName() + \" | XP: \" + Math.round(initialOpponent.getXp()) + \" | gold coins: \" + Math.round(initialOpponent.getCoins()));\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/War.java b/War.java
--- a/War.java	(revision 5da0b48584e7e0af1b042b0c9e17646e5524c32e)
+++ b/War.java	(date 1710860336631)
@@ -89,6 +89,7 @@
                     }
                 }
                 case "Desert" -> {
+                    System.out.println("character name = " + character.getName());
                     if (character.getCharacterType().equals("Marshlander")) {
                         character.setHealth(character.getHealth() - 1);
                     }
@@ -188,7 +189,7 @@
             if (!attackingSide) {
                 System.out.println("\nTurn " + turn + ": " + initialChallenger.getUserName());
 
-                if(!(challengerArmyAttackingArray.getFirst() instanceof Healer)) {
+                if(!(challengerArmyAttackingArray.get(ci) instanceof Healer)) {
                     System.out.println(String.format("** %s's %s attacks %s's %s **",
                             initialChallenger.getUserName(),
                             challengerArmyAttackingArray.get(ci).getName(),
@@ -218,8 +219,8 @@
 
                     System.out.println(String.format("-- %s's %s's health: %s",
                             initialChallenger.getUserName(),
-                            challengerArmyAttackingArray.getFirst().getName(),
-                            challengerArmyAttackingArray.getFirst().getHealth()));
+                            challengerArmyAttackingArray.get(ci).getName(),
+                            challengerArmyAttackingArray.get(ci).getHealth()));
 
                     if(opponentArmyDefendingArray.getFirst().getHealth() <= 0){
                         System.out.println(initialOpponent.getUserName() + "'s " + opponentArmyDefendingArray.getFirst().getName()+" Died!");
@@ -274,17 +275,17 @@
             else{
                 System.out.println("\nTurn " + turn + ": " + initialOpponent.getUserName());
 
-                if(!(opponentArmyAttackingArray.getFirst() instanceof Healer)) {
+                if(!(opponentArmyAttackingArray.get(oi) instanceof Healer)) {
                     System.out.println(String.format("** %s's %s attacks %s's %s **",
                             initialOpponent.getUserName(),
                             opponentArmyAttackingArray.get(oi).getName(),
                             initialChallenger.getUserName(),
                             challengerArmyDefendingArray.getFirst().getName()));
 
+                    //calculates damage
                     double dmg = 0.5 * (opponentArmyAttackingArray.get(oi).getAttack()) - 0.1 * (challengerArmyDefendingArray.get(0).getDefence());
 
                     challengerArmyDefendingArray.get(0).setHealth(challengerArmyDefendingArray.get(0).getHealth() - dmg);
-
                     //System.out.println(challengerArmyDefendingArray.get(0).getName() + "'s health reduce by " + dmg + " by the attack of " + opponentArmyAttackingArray.get(oi).getName());
 
                     if(initialChallenger.getHomeGround().equals("Hillcrest") && opponentArmyAttackingArray.get(0).getCharacterType().equals("Highlander")){
Index: Menu.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import java.io.*;\nimport java.util.ArrayList;\nimport java.util.Scanner;\nimport java.util.*;\n\npublic class Menu implements MenuInterface{\n    static List<User> userList = new ArrayList<>();\n    static List<String> userNames = new ArrayList<>();\n    private final List<String> archers = List.of(\"shooter\", \"ranger\", \"sunfire\", \"zing\", \"sagittarius\");\n    private final List<String> knights = List.of(\"squire\", \"cavalier\", \"templar\", \"zoro\", \"swiftblade\");\n    private final List<String> mages = List.of(\"warlock\", \"illusionist\", \"enchanter\", \"conjurer\", \"eldritch\");\n    private final List<String> healers = List.of(\"soother\", \"medic\", \"alchemist\", \"saint\", \"lightbringer\");\n    private final List<String> mythicalCreatures = List.of(\"dragon\", \"basilisk\", \"hydra\", \"phoenix\", \"pegasus\");\n    private final List<String> armours = List.of(\"chainmail\", \"regalia\", \"fleece\");\n    private final List<String> artefacts = List.of(\"excalibur\", \"amulet\", \"crystal\");\n\n    private Scanner scanner = new Scanner(System.in);\n    private User currentUser;\n    private User challenger;\n\n    public Menu() {\n        loadFile();\n    }\n    public void displayMenu() {\n        while (true) {\n            System.out.println(\"\"\n                    + \"╔═══════════════════╗\\n\"\n                    + \"   Ｍａｉｎ Ｍｅｎｕ  \\n\"\n                    + \"╚═══════════════════╝\\n\"\n                    + \"1. New Adventure\\n\"\n                    + \"2. Add a Custom Profile\\n\"\n                    + \"3. Load Profile\\n\"\n                    + \"4. View Profile\\n\"\n                    + \"5. View Army\\n\"\n                    + \"6. Reinforce Army\\n\"\n                    + \"7. Initiate a Battle\\n\"\n                    + \"8. Exit Arena\\n\"\n                    + \"═════════════════════\");\n            try {\n                int choice = scanner.nextInt();\n\n                switch (choice) {\n                    case 1:\n                        clearScreen();\n                        this.createNewProfile();\n                        break;\n                    case 2:\n                        clearScreen();\n                        this.createCustomProfile();\n                        break;\n                    case 3:\n                        clearScreen();\n                        this.loadProfile();\n                        break;\n                    case 4:\n                        clearScreen();\n                        this.printUserData(currentUser);\n                        this.waitForInput();\n                        break;\n                    case 5:\n                        clearScreen();\n                        this.printUserDetailsinWar(currentUser);\n                        this.waitForInput();\n                        break;\n                    case 6:\n                        clearScreen();\n                        this.reinforceArmy();\n                        this.waitForInput();\n                        break;\n                    case 7:\n                        clearScreen();\n                        this.initiateBattle();\n                        break;\n                    case 8:\n                        saveUserList();\n                        System.out.println(\"Exiting program...\");\n                        System.exit(0);\n                    default:\n                        System.out.println(\"\\nInvalid choice, Please enter a digit from 1 to 8\\n\");\n                }\n            } catch (InputMismatchException e) {\n                System.out.println(\"\\nInvalid input, Please enter a digit from 1 to 8\\n\");\n                scanner.next();\n            }\n        }\n    }\n    public void saveUserList(){\n        try{\n            FileOutputStream data = new FileOutputStream(\"Data.ser\");\n            ObjectOutputStream obj = new ObjectOutputStream(data);\n            obj.writeObject(userList);\n            obj.close();\n        }\n        catch (IOException e) {\n            System.out.println(\"An error occurred.\");\n            e.printStackTrace();\n        }\n    }\n    public void loadFile() {\n        try (ObjectInputStream in = new ObjectInputStream(new FileInputStream(\"Data.ser\"))){\n            userList = (List<User>) in.readObject();\n            userNames.clear(); // Clear the list before populating\n            for (User user : userList) {\n                userNames.add(user.getUserName()); // Add each user's username to the list\n            }\n        } catch (IOException | ClassNotFoundException e) {\n            System.out.println(\"An error occured\");\n            e.printStackTrace();\n        }\n    }\n    private void createNewProfile() {\n        System.out.print(\"Enter Your Name: \");\n        String name = scanner.next();\n\n        String userName;\n        System.out.println(\"Now choose a USERNAME. This must be UNIQUE and you can't change this later.\");\n        while (true) {\n            System.out.print(\"Enter Username: \");\n            userName = scanner.next();\n            if (userNames.contains(userName)) {\n                System.out.println(\"Username Already Exists!\");\n            } else {\n                userNames.add(userName);\n                break;\n            }\n        }\n        System.out.println(\"Now choose a home ground for your army\\n\" +\n                \"1. Hillcrest\\n\" +\n                \"2. Marshland\\n\" +\n                \"3. Desert\\n\" +\n                \"4. Arcane\");\n\n        int homeGroundChoice = 0;\n        while (true) {\n            try {\n                homeGroundChoice = scanner.nextInt();\n                if (homeGroundChoice >= 1 && homeGroundChoice <= 4) {\n                    break; // Exit the loop if a valid choice is made\n                } else {\n                    System.out.println(\"\\nInvalid Choice, Please enter a digit from 1 to 4\");\n                }\n            } catch (InputMismatchException e) {\n                System.out.println(\"\\nInvalid Input, Please enter a digit from 1 to 4\");\n                scanner.next(); // Clear the scanner buffer\n            }\n        }\n        User newUser;\n        if (homeGroundChoice == 1) {\n            newUser = new User(name, userName, \"Hillcrest\");\n        } else if (homeGroundChoice == 2) {\n            newUser = new User(name, userName, \"Marshland\");\n        } else if (homeGroundChoice == 3) {\n            newUser = new User(name, userName, \"Desert\");\n        } else {\n            newUser = new User(name, userName, \"Arcane\");\n        }\n\n        System.out.println(\"\\nPerfect! You're on the verge of your first battle. Let's now enforce your army\");\n        System.out.println(\"Here's a detailed table about troops. Be mindful to choose only one character from each type\\n\");\n        Table.displayTroopsTable();\n        System.out.println(\"\\nYou have only \" + Math.round(newUser.getCoins()) + \" gc in your treasure\");\n        System.out.println(\"Embark on your journey by selecting characters from above categories\\n\");\n\n        while (newUser.getArmy().size() < 5) {\n            System.out.print(\"Provide a name to bring it to life: \");\n            String characterName = scanner.next().toLowerCase();\n            if (archers.contains(characterName)) {\n                newUser.addTroopToArmy(new Archer(characterName));\n            } else if (knights.contains(characterName)) {\n                newUser.addTroopToArmy(new Knight(characterName));\n            } else if (mages.contains(characterName)) {\n                newUser.addTroopToArmy(new Mage(characterName));\n            } else if (healers.contains(characterName)) {\n                newUser.addTroopToArmy(new Healer(characterName));\n            } else if (mythicalCreatures.contains(characterName)) {\n                newUser.addTroopToArmy(new MythicalCreature(characterName));\n            } else {\n                System.out.println(\"Enter a valid name!!\");\n            }\n            System.out.println(\"You have only \" + Math.round(newUser.getCoins()) + \" coins remaining\\n\");\n        }\n        System.out.println(\"PERFECT!! Your legion is now complete\");\n        userList.add(newUser);\n        saveUserList();\n        System.out.println(\"\\nWELCOME to the world of Mystic Mayhem\" + \"\\nYou are all set to go\\n\");\n        printUserData(newUser);\n        printArmy(newUser);\n        setCurrentUser(newUser);\n\n        System.out.println(\"\\n\" +\n            \"════════════════════\\n\" +\n            \"1. Initiate a Battle\\n\" +\n            \"2. Back to Main Menu\\n\" +\n            \"════════════════════\\n\");\n        while (true) {\n            try {\n                int choice = scanner.nextInt();\n                switch (choice) {\n                    case 1:\n                        clearScreen();\n                        initiateBattle();\n                        saveUserList();\n                        break;\n                    case 2:\n                        System.out.println(\"Returning to the main menu...\\n\");\n                        displayMenu();\n                        break;\n                    default:\n                        System.out.println(\"Invalid choice. Please try again.\");\n                        break;\n                }\n            } catch (InputMismatchException e) {\n                System.out.println(\"Invalid input. Please try again.\");\n                scanner.next();\n            }\n        }\n    }\n    //This function is to create a custom profile like \"GeraltofRivia\" from the start\n    private void createCustomProfile(){\n        System.out.print(\"Enter Your Name: \");\n        String name = scanner.next();\n\n        String userName;\n        System.out.println(\"Now choose a USERNAME. This must be UNIQUE and you can't change this later.\");\n        while (true) {\n            System.out.print(\"Enter Username: \");\n            userName = scanner.next();\n            if (userNames.contains(userName)) {\n                System.out.println(\"Username Already Exists!\");\n            } else {\n                userNames.add(userName);\n                break;\n            }\n        }\n        System.out.println(\"Now choose a home ground for your army\\n\" +\n                \"1. Hillcrest\\n\" +\n                \"2. Marshland\\n\" +\n                \"3. Desert\\n\" +\n                \"4. Arcane\");\n\n        int homeGroundChoice = 0;\n        while (true) {\n            try {\n                homeGroundChoice = scanner.nextInt();\n                if (homeGroundChoice >= 1 && homeGroundChoice <= 4) {\n                    break; // Exit the loop if a valid choice is made\n                } else {\n                    System.out.println(\"\\nInvalid Choice, Please enter a digit from 1 to 4\");\n                }\n            } catch (InputMismatchException e) {\n                System.out.println(\"\\nInvalid Input, Please enter a digit from 1 to 4\");\n                scanner.next(); // Clear the scanner buffer\n            }\n        }\n        User newUser;\n        if (homeGroundChoice == 1) {\n            newUser = new User(name, userName, \"Hillcrest\");\n        } else if (homeGroundChoice == 2) {\n            newUser = new User(name, userName, \"Marshland\");\n        } else if (homeGroundChoice == 3) {\n            newUser = new User(name, userName, \"Desert\");\n        } else {\n            newUser = new User(name, userName, \"Arcane\");\n        }\n        setCurrentUser(newUser);\n        int xp = 0;\n        while (true) {\n            System.out.print(\"\\nEnter the XP value: \");\n            try {\n                xp = scanner.nextInt();\n                if (xp > 0) {\n                    newUser.setXp(xp);\n                    break; // Exit the loop if a valid input is provided\n                } else {\n                    System.out.println(\"Please enter a positive integer\");\n                }\n            } catch (InputMismatchException e) {\n                System.out.println(\"Invalid input. Please enter a valid integer.\");\n                scanner.next(); // Clear the invalid input from the scanner buffer\n            }\n        }\n        newUser.setCoins(1000000); // Set the gold coins to a large value until troops added.then get the input and change the gold coins to the required amount\n        System.out.println(\"\\nPerfect! You're on the verge of your first battle. Let's now enforce your army\");\n        System.out.println(\"Here's a detailed table about troops. Be mindful to choose only one character from each type\\n\");\n        Table.displayTroopsTable();\n        System.out.println(\"Embark on your journey by selecting characters from above categories\\n\");\n\n        while (newUser.getArmy().size() < 5) {\n            System.out.print(\"Provide a name to bring it to life: \");\n            String characterName = scanner.next().toLowerCase();\n            if (archers.contains(characterName)) {\n                newUser.addTroopToArmy(new Archer(characterName));\n            } else if (knights.contains(characterName)) {\n                newUser.addTroopToArmy(new Knight(characterName));\n            } else if (mages.contains(characterName)) {\n                newUser.addTroopToArmy(new Mage(characterName));\n            } else if (healers.contains(characterName)) {\n                newUser.addTroopToArmy(new Healer(characterName));\n            } else if (mythicalCreatures.contains(characterName)) {\n                newUser.addTroopToArmy(new MythicalCreature(characterName));\n            } else {\n                System.out.println(\"Enter a valid name!!\");\n            }\n        }\n        int goldCoins = 0;\n        while (true) {\n            System.out.print(\"\\nEnter the coin amount: \");\n            try {\n                goldCoins = scanner.nextInt();\n                if (goldCoins > 0) {\n                    newUser.setCoins(-1000000 + goldCoins);\n                    break; // Exit the loop if a valid input is provided\n                } else {\n                    System.out.println(\"Please enter a positive integer\");\n                }\n            } catch (InputMismatchException e) {\n                System.out.println(\"Invalid input. Please enter a valid integer.\");\n                scanner.next(); // Clear the invalid input from the scanner buffer\n            }\n        }\n        System.out.println(\"PERFECT!! Your legion is now complete\");\n        userList.add(newUser);\n        setCurrentUser(newUser);\n        saveUserList();\n        System.out.println(\"\\nWELCOME to the world of Mystic Mayhem\" + \"\\nYou are all set to go\\n\");\n        printUserData(newUser);\n        System.out.println();\n        printArmy(newUser);\n\n        System.out.println(\"\\n\" +\n                \"════════════════════\\n\" +\n                \"1. Initiate a Battle\\n\" +\n                \"2. Back to Main Menu\\n\" +\n                \"════════════════════\\n\");\n        while (true) {\n            try {\n                int choice = scanner.nextInt();\n                switch (choice) {\n                    case 1:\n                        clearScreen();\n                        initiateBattle();\n                        saveUserList();\n                        break;\n                    case 2:\n                        System.out.println(\"Returning to the main menu...\\n\");\n                        displayMenu();\n                        break;\n                    default:\n                        System.out.println(\"Invalid choice. Please try again.\");\n                        break;\n                }\n            } catch (InputMismatchException e) {\n                System.out.println(\"Invalid input. Please try again.\");\n                scanner.next();\n            }\n        }\n    }\n    public void loadProfile() {\n        boolean validUsernameEntered = false;\n        if (!userList.isEmpty()){\n            while (!validUsernameEntered) {\n                System.out.println(\"Select a profile to load from below\");\n                for (User user : userList) {\n                    System.out.print(user.getUserName() + \"  \" + Math.round(user.getXp()) + \"Xp \\n\");\n                }\n                System.out.print(\"\\nEnter the username of the profile you want to load: \");\n                String userNameToLoad = scanner.next();\n\n                for (User user : userList) {\n                    if (user.getUserName().equals(userNameToLoad)) {\n                        System.out.println(\"\\nProfile loaded successfully!\\n\");\n                        setCurrentUser(user);\n                        printUserData(user);\n                        validUsernameEntered = true; // Valid username entered, exit the loop\n                        break;\n                    }\n                }\n                if (!validUsernameEntered) {\n                    System.out.println(\"\\nProfile with username '\" + userNameToLoad + \"' not found. Please try again.\\n\");\n                }\n            }\n        }\n        else{\n            System.out.println(\"No users!\");\n        }\n        waitForInput();\n        displayMenu();\n    }\n    public void changeCharacters(User curretUser) {\n        if (curretUser != null) {\n            printArmy(curretUser);\n            Table.displayTroopsTable();\n            System.out.println(\"\\nChoose replacing character type.\\n\" +\n                    \"1. Archer\\n\" +\n                    \"2. Knight\\n\" +\n                    \"3. Mage\\n\" +\n                    \"4. Healer\\n\" +\n                    \"5. Mythical Creature\");\n            try {\n                int charactertype = scanner.nextInt();\n                while (1 > charactertype || charactertype > 5) {\n                    System.out.println(\"Select a number from 1 to 5\\n\");\n                    changeCharacters(curretUser);\n                }\n                while (true) {\n                    System.out.print(\"Enter character name to replace with the current character: \");\n                    String newCharacterName = scanner.next().toLowerCase().strip();\n                    if (charactertype == 1) {\n                        if (archers.contains(newCharacterName)) {\n                            curretUser.replaceTroop(curretUser.getMyArmyMap().get(\"Archer\"), new Archer(newCharacterName));\n                            break;\n                        }\n                    } else if (charactertype == 2) {\n                        if (knights.contains(newCharacterName)) {\n                            curretUser.replaceTroop(curretUser.getMyArmyMap().get(\"Knight\"), new Knight(newCharacterName));\n                            break;\n                        }\n                    } else if (charactertype == 3) {\n                        if (mages.contains(newCharacterName)) {\n                            curretUser.replaceTroop(curretUser.getMyArmyMap().get(\"Mage\"), new Mage(newCharacterName));\n                            break;\n                        }\n                    } else if (charactertype == 4) {\n                        if (healers.contains(newCharacterName)) {\n                            curretUser.replaceTroop(curretUser.getMyArmyMap().get(\"Healer\"), new Healer(newCharacterName));\n                            break;\n                        }\n                    } else {\n                        if (mythicalCreatures.contains(newCharacterName)) {\n                            curretUser.replaceTroop(curretUser.getMyArmyMap().get(\"MythicalCreature\"), new MythicalCreature(newCharacterName));\n                            break;\n                        }\n                    }\n                }\n                saveUserList();\n                waitForInput();\n                displayMenu();\n            }catch (InputMismatchException e){\n                System.out.println(\"Select a number from 1 to 5\\n\");\n                scanner.next();\n                changeCharacters(curretUser);\n            }\n        }else{\n            System.out.println(\"You don't have an active profile yet\\n\"+\n                    \"Please create a new profile or load a profile to change troops\\n\");\n            waitForInput();\n            System.out.println(\"Directing back to Main Menu...\\n\");\n            displayMenu();\n        }\n    }\n    public void addEquipments() {\n        System.out.println(\"You currently have: \");\n        for (Character character : currentUser.getArmy()) {\n            System.out.println(\"                 \" + character.getName().toUpperCase() + \" [\" + character.getClass().getSimpleName() + \"]\" + \" with \" + character.armourCount + \" armour and \"\n                    + character.artefactCount + \" artefact\");\n        }\n        System.out.println(\"Select the character to enforce with equipment\\n\");\n        try {\n            System.out.println(\"ARCHER [enter 1], KNIGHT [enter 2], MAGE [enter 3], HEALER [enter 4], MYTHICAL CREATURE [enter 5]: \");\n            int choice = scanner.nextInt();\n            System.out.println(\"\\nDelve into the extensive selection of available equipment detailed below\\n\");\n            Table.displayEquipmentTable();\n            System.out.print(\"\\nEnter the name of the equipment: \");\n            String equipment = scanner.next().toLowerCase();\n            Armour armour = null;\n            Artefact artefact = null;\n\n            if (armours.contains(equipment)) {\n                armour = new Armour(equipment);\n            } else if (artefacts.contains(equipment)) {\n                artefact = new Artefact(equipment);\n            } else {\n                System.out.println(\"Equipment not found. Prompt Again \");\n                addEquipments();\n                return;\n            }\n\n            switch (choice) {\n                case 1:\n                    if (currentUser.addEquipment(currentUser.getMyArmyMap().get(\"Archer\"), armour != null ? armour : artefact)) {\n                        System.out.println(\"Equipment added successfully.\");\n                    }\n                    break;\n                case 2:\n                    if (currentUser.addEquipment(currentUser.getMyArmyMap().get(\"Knight\"), armour != null ? armour : artefact)) {\n                        System.out.println(\"Equipment added successfully.\");\n                    }\n                    break;\n                case 3:\n                    if (currentUser.addEquipment(currentUser.getMyArmyMap().get(\"Mage\"), armour != null ? armour : artefact)) {\n                        System.out.println(\"Equipment added successfully.\");\n                    }\n                    break;\n                case 4:\n                    if (currentUser.addEquipment(currentUser.getMyArmyMap().get(\"Healer\"), armour != null ? armour : artefact)) {\n                        System.out.println(\"Equipment added successfully.\");\n                    }\n                    break;\n                case 5:\n                    if (currentUser.addEquipment(currentUser.getMyArmyMap().get(\"MythicalCreature\"), armour != null ? armour : artefact)) {\n                        System.out.println(\"Equipment added successfully.\");\n                    }\n                    break;\n                default:\n                    System.out.println(\"Invalid choice!\");\n                    break;\n            }\n            waitForInput();\n            System.out.println(\"\\nDirecting back to main menu...\\n\");\n            saveUserList();\n        } catch(InputMismatchException e){\n            System.out.println(\"Invalid input!\");\n            scanner.next();\n            addEquipments();// Clear the scanner buffer\n        }\n    }\n    public User getCurrentUser() {\n        return currentUser;\n    }\n    public void setCurrentUser(User user) {\n        this.currentUser = user;\n    }\n    public void printUserData(User user) {\n        try {\n            System.out.println(\"▂ ▅ ▇ █ █ ▇ ▅ ▂\");\n            System.out.println(\"Username: \" + user.getUserName());\n            System.out.println(\"UserID: \" + user.getUserID());\n            System.out.println(\"Coins: \" + Math.round(user.getCoins()) + \" gc\");\n            System.out.println(\"Battle Xp: \" + Math.round(user.getXp()));\n            System.out.println(\"▂ ▂ ▂ PROFILE ▂ ▂ ▂ \\n\");\n        } catch (NullPointerException e){\n            System.out.println(\"Sorry you haven't created any profiles yet\");\n            displayMenu();\n        }\n    }\n    public void printUserDetailsinWar(User user) {\n        clearScreen();\n        try {\n            System.out.println(\"Username: \" + user.getUserName());\n            System.out.println(\"XP: \" + Math.round(user.getXp()));\n            System.out.println(\"Characters:\");\n            int i = 1;\n            for (Character character : user.getArmy()) {\n                System.out.println(\"   \" + i + \". \" + character.getName().toUpperCase());\n                i++;\n            }\n            System.out.println(\"╚════════════════════════════╝\\n\");\n        } catch (NullPointerException e){\n            System.out.println(\"Please create or load a profile to view army\\n\");\n            displayMenu();\n        }\n    }\n    public void printArmy(User user) {\n        System.out.println(\"\uFE0F══ Your Legion ══\");\n        for (Character character : user.getArmy()) {\n            String characterType = \"\";\n            if (character instanceof Archer) {\n                characterType = \"Archer\";\n            } else if (character instanceof Knight) {\n                characterType = \"Knight\";\n            } else if (character instanceof Mage) {\n                characterType = \"Mage\";\n            } else if (character instanceof Healer) {\n                characterType = \"Healer\";\n            } else if (character instanceof MythicalCreature) {\n                characterType = \"Mythical Creature\";\n            }\n\n            System.out.println(characterType.toUpperCase() + \": \" + character.getName().toUpperCase() +\n                    \" --> Price \" + character.getPrice() + \" | Attack \" + character.getAttack() +\n                    \" | Defence \" + character.getDefence() + \" | Health \" + character.getHealth() +\n                    \" | Speed \" + character.getSpeed());\n        }\n        System.out.println();\n    }\n    private User getOpponent() {\n        if (userList.size() < 2) {\n            System.out.println(\"There are not enough users to challenge. Please add more users.\");\n            return null;\n        }\n\n        List<User> availableOpponents = new ArrayList<>(userList);\n        availableOpponents.remove(currentUser);\n\n        if (availableOpponents.isEmpty()) {\n            System.out.println(\"No available opponents to challenge.\");\n            return null;\n        }\n\n        Random random = new Random();\n        User opponent = availableOpponents.get(random.nextInt(availableOpponents.size()));\n\n        printUserDetailsinWar(opponent);\n\n        while (true) {\n            System.out.print(\"Challenge , Skip or Exit to Main Menu (C/S/E): \");\n            String decision = scanner.next();\n            if (decision.equalsIgnoreCase(\"c\")) {\n                challenger = opponent;\n                return challenger;\n            } else if (decision.equalsIgnoreCase(\"s\")) {\n                opponent = availableOpponents.get(random.nextInt(availableOpponents.size()));\n                printUserDetailsinWar(opponent);\n            } else if (decision.equalsIgnoreCase(\"e\")) {\n                displayMenu();\n                return null;\n            } else {\n                System.out.println(\"Enter 'c' to challenge , 's' to skip or 'e' to exit to main menu\");\n            }\n        }\n    }\n    public void reinforceArmy(){\n        System.out.println(\"\\n════════════════════\\n\" +\n            \"1. Replace Troops\\n\" +\n            \"2. GearUp Troops\\n\" +\n            \"3. Back to Main Menu\\n\" +\n            \"════════════════════\\n\");\n        if (currentUser != null) {\n            while (true) {\n                try {\n                    int choice = scanner.nextInt();\n                    if (choice == 1 || choice == 2){\n                        if (choice == 1) {\n                            changeCharacters(currentUser);\n                        } else {\n                            addEquipments();\n                        }\n                        break;\n                    } else if (choice == 3){\n                        displayMenu();\n                        break;\n                    } else {\n                        System.out.println(\"Invalid choice, choose a number from 1 to 3\");\n                    }\n                } catch (InputMismatchException e) {\n                    System.out.println(\"Invalid input, choose a number from 1 to 3\");\n                    scanner.next();\n                }\n            }\n        }\n        else {\n            System.out.println(\"You don't have an active profile yet\\n\"+\n                    \"Please create a new profile or load a profile to change troops\\n\");\n            System.out.println(\"Directing back to Main Menu...\\n\");\n            displayMenu();\n        }\n        saveUserList();\n    }\n    public void initiateBattle(){\n        if (currentUser != null) {\n            System.out.println(\"\\n═════════════════════\\n\" +\n                \"1. Find a Battle\\n\" +\n                \"2. Back to Main Menu\\n\" +\n                \"═════════════════════\\n\");\n            while (true) {\n                try {\n                    int choice = scanner.nextInt();\n                    if (choice == 1) {\n                        User opponent = getOpponent();\n                        War war = new War(currentUser,opponent);\n                        waitForInput();\n                        displayMenu();\n                        break;\n                    } else if (choice == 2) {\n                        displayMenu();\n                        break;\n                    } else {\n                        System.out.println(\"\\nInvalid choice, choose a number from 1 to 3\");\n                    }\n                } catch (InputMismatchException e) {\n                    System.out.println(\"\\nInvalid input, choose a number from 1 to 3\");\n                    scanner.next();\n                }\n            }\n        }\n        else {\n            System.out.println(\"You don't have an active profile yet\\n\"+\n                    \"Please create a new profile or load a profile to change troops\\n\");\n            System.out.println(\"Directing back to Main Menu...\\n\");\n            displayMenu();\n        }\n        saveUserList();\n    }\n    public static void clearScreen() {\n        try {\n            if (System.getProperty(\"os.name\").contains(\"Windows\")) {\n                new ProcessBuilder(\"cmd\", \"/c\", \"cls\").inheritIO().start().waitFor();\n            } else {\n                System.out.print(\"\\033[H\\033[2J\");\n                System.out.flush();\n            }\n        } catch (IOException | InterruptedException ex) {\n            ex.printStackTrace();\n        }\n    }\n    private void waitForInput() {\n        System.out.println(\"Press Enter to continue...\");\n        try {\n            System.in.read(); // Wait for user to press Enter\n            return;\n        } catch (IOException e) {\n            e.printStackTrace();\n            return;\n        }\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Menu.java b/Menu.java
--- a/Menu.java	(revision 5da0b48584e7e0af1b042b0c9e17646e5524c32e)
+++ b/Menu.java	(date 1710854196174)
@@ -3,9 +3,12 @@
 import java.util.Scanner;
 import java.util.*;
 
-public class Menu implements MenuInterface{
+public class Menu implements MenuInterface {
+    // Lists to store users and their names
     static List<User> userList = new ArrayList<>();
     static List<String> userNames = new ArrayList<>();
+
+    // Lists for different types of troops and items
     private final List<String> archers = List.of("shooter", "ranger", "sunfire", "zing", "sagittarius");
     private final List<String> knights = List.of("squire", "cavalier", "templar", "zoro", "swiftblade");
     private final List<String> mages = List.of("warlock", "illusionist", "enchanter", "conjurer", "eldritch");
@@ -18,11 +21,15 @@
     private User currentUser;
     private User challenger;
 
+    // Constructor
     public Menu() {
-        loadFile();
+        loadFile(); // Load existing user data from file
     }
+
+    // Method to display the main menu
     public void displayMenu() {
         while (true) {
+            // Display menu options
             System.out.println(""
                     + "╔═══════════════════╗\n"
                     + "   Ｍａｉｎ Ｍｅｎｕ  \n"
@@ -37,74 +44,78 @@
                     + "8. Exit Arena\n"
                     + "═════════════════════");
             try {
-                int choice = scanner.nextInt();
+                int choice = scanner.nextInt(); // Get user choice
 
+                // Process user choice
                 switch (choice) {
                     case 1:
                         clearScreen();
-                        this.createNewProfile();
+                        this.createNewProfile(); // Create a new user profile
                         break;
                     case 2:
                         clearScreen();
-                        this.createCustomProfile();
+                        this.createCustomProfile(); // Create a custom user profile
                         break;
                     case 3:
                         clearScreen();
-                        this.loadProfile();
+                        this.loadProfile(); // Load an existing user profile
                         break;
                     case 4:
                         clearScreen();
-                        this.printUserData(currentUser);
+                        this.printUserData(currentUser); // View current user profile
                         this.waitForInput();
                         break;
                     case 5:
                         clearScreen();
-                        this.printUserDetailsinWar(currentUser);
+                        this.printUserDetailsinWar(currentUser); // View current user's army details
                         this.waitForInput();
                         break;
                     case 6:
                         clearScreen();
-                        this.reinforceArmy();
+                        this.reinforceArmy(); // Add troops to current user's army
                         this.waitForInput();
                         break;
                     case 7:
                         clearScreen();
-                        this.initiateBattle();
+                        this.initiateBattle(); // Start a battle
                         break;
                     case 8:
-                        saveUserList();
+                        saveUserList(); // Save user data to file
                         System.out.println("Exiting program...");
-                        System.exit(0);
+                        System.exit(0); // Exit program
                     default:
                         System.out.println("\nInvalid choice, Please enter a digit from 1 to 8\n");
                 }
             } catch (InputMismatchException e) {
                 System.out.println("\nInvalid input, Please enter a digit from 1 to 8\n");
-                scanner.next();
+                scanner.next(); // Clear the invalid input from the scanner buffer
             }
         }
     }
-    public void saveUserList(){
-        try{
+
+    // Method to save user data to file
+    public void saveUserList() {
+        try {
             FileOutputStream data = new FileOutputStream("Data.ser");
             ObjectOutputStream obj = new ObjectOutputStream(data);
-            obj.writeObject(userList);
+            obj.writeObject(userList); // Write userList to file
             obj.close();
-        }
-        catch (IOException e) {
+        } catch (IOException e) {
             System.out.println("An error occurred.");
             e.printStackTrace();
         }
     }
+
+    // Method to load user data from file
     public void loadFile() {
-        try (ObjectInputStream in = new ObjectInputStream(new FileInputStream("Data.ser"))){
-            userList = (List<User>) in.readObject();
+        try (ObjectInputStream in = new ObjectInputStream(new FileInputStream("Data.ser"))) {
+            userList = (List<User>) in.readObject(); // Read userList from file
             userNames.clear(); // Clear the list before populating
             for (User user : userList) {
                 userNames.add(user.getUserName()); // Add each user's username to the list
             }
         } catch (IOException | ClassNotFoundException e) {
-            System.out.println("An error occured");
+            System.out.println("An error occurred");
             e.printStackTrace();
         }
     }
Index: out/production/OOP-Project/META-INF/MANIFEST.MF
===================================================================
diff --git a/out/production/OOP-Project/META-INF/MANIFEST.MF b/out/production/OOP-Project/META-INF/MANIFEST.MF
deleted file mode 100644
--- a/out/production/OOP-Project/META-INF/MANIFEST.MF	(revision 5da0b48584e7e0af1b042b0c9e17646e5524c32e)
+++ /dev/null	(revision 5da0b48584e7e0af1b042b0c9e17646e5524c32e)
@@ -1,3 +0,0 @@
-Manifest-Version: 1.0
-Main-Class: Main
-
Index: Data.ser
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Data.ser b/Data.ser
deleted file mode 100644
--- a/Data.ser	(revision 5da0b48584e7e0af1b042b0c9e17646e5524c32e)
+++ /dev/null	(revision 5da0b48584e7e0af1b042b0c9e17646e5524c32e)
@@ -1,14 +0,0 @@
-�� sr java.util.ArrayListx����a� I sizexp   w   sr UserɘŸ�J�b D coinsI xpL 
-homeGroundt Ljava/lang/String;L myArmyt Ljava/util/ArrayList;L 	myArmyMapt Ljava/util/Map;L nameq ~ L userIDq ~ L userNameq ~ xp@4          t 	Hillcrestsq ~     w   sr ArcherL�RA'[� L nameq ~ xr 	Charactery�W�R� I armourCountI 
-artefactCountD attackD defenceD healthI priceD speedL armourt LArmour;L artefactt 
-LArtefact;L 
-characterTypeq ~ L nameq ~ xp        @&      @      @         P@"      ppt 
-Highlandert shooterpsr Healer�yQӪ  xq ~ 
-        @$      @       @"         _@      ppt Sunchildt soothersr Knight>�b��W  xq ~ 
-        @       @"      @         U@       ppt Marshlandert squiresr MageĲ+�Q��  xq ~ 
-        @(      @      @$         d@(      ppq ~ t warlocksr MythicalCreature��u���  xq ~ 
-        @(      @,      @.         x@       ppq ~ t dragonxsr java.util.HashMap���`� F 
-loadFactorI 	thresholdxp?@     w      t Archerq ~ 
-t Mageq ~ t Knightq ~ t Healerq ~ t MythicalCreatureq ~ xt Rivindut RI001t Rivi@02sq ~ A.�d        t 	Marshlandsq ~     w   sq ~ 	       @,      @      @          �@"      sr Armour�݇�ݰ�  xr 	Equipmentm�}���i D attackD defenceD healthI priceD speedL nameq ~ xp        ?�                 F��      t 	chainmailpt 
-Highlandert rangerpsq ~         @       @"      @         U@       ppt Marshlandert squiresq ~         @(      @      @$         d@(      ppq ~ 3t warlocksq ~        @(      @"      @$         �@      psr Artefactf��n�	�  xq ~ -                                    t amuletq ~ 0t medicsq ~         @(      @,      @.         x@       ppt Sunchildt dragonxsq ~ ?@     w      t Archerq ~ +t Mageq ~ 5t Knightq ~ 2t Healerq ~ 7t MythicalCreatureq ~ <xt 
-GeraltofRiviat WH001t 	whitewolfx
\ No newline at end of file
Index: META-INF/MANIFEST.MF
===================================================================
diff --git a/META-INF/MANIFEST.MF b/META-INF/MANIFEST.MF
deleted file mode 100644
--- a/META-INF/MANIFEST.MF	(revision 5da0b48584e7e0af1b042b0c9e17646e5524c32e)
+++ /dev/null	(revision 5da0b48584e7e0af1b042b0c9e17646e5524c32e)
@@ -1,3 +0,0 @@
-Manifest-Version: 1.0
-Main-Class: Main
-
Index: out/production/OOP-Project/Data.ser
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>��\u0000\u0005sr\u0000\u0013java.util.ArrayListx��\u001D��a�\u0003\u0000\u0001I\u0000\u0004sizexp\u0000\u0000\u0000\u0004w\u0004\u0000\u0000\u0000\u0004sr\u0000\u0004UserɘŸ�J�b\u0002\u0000\bD\u0000\u0005coinsD\u0000\u0002xpL\u0000\nhomeGroundt\u0000\u0012Ljava/lang/String;L\u0000\u0006myArmyt\u0000\u0015Ljava/util/ArrayList;L\u0000\tmyArmyMapt\u0000\u000FLjava/util/Map;L\u0000\u0004nameq\u0000~\u0000\u0003L\u0000\u0006userIDq\u0000~\u0000\u0003L\u0000\buserNameq\u0000~\u0000\u0003xpA.��\u0000\u0000\u0000\u0000@@\u0000\u0000\u0000\u0000\u0000\u0000t\u0000\tMarshlandsq\u0000~\u0000\u0000\u0000\u0000\u0000\u0005w\u0004\u0000\u0000\u0000\u0005sr\u0000\u0006ArcherL�RA\u0013'[�\u0002\u0000\u0001L\u0000\u0004nameq\u0000~\u0000\u0003xr\u0000\tCharactery�\u0006W�R�\u0002\u0000\u000BI\u0000\u000BarmourCountI\u0000\rartefactCountD\u0000\u0006attackD\u0000\u0007defenceD\u0000\u0006healthI\u0000\u0005priceD\u0000\u0005speedL\u0000\u0006armourt\u0000\bLArmour;L\u0000\bartefactt\u0000\nLArtefact;L\u0000\rcharacterTypeq\u0000~\u0000\u0003L\u0000\u0004nameq\u0000~\u0000\u0003xp\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000@,\u0000\u0000\u0000\u0000\u0000\u0000@\u0018\u0000\u0000\u0000\u0000\u0000\u0000@ \u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�@\"\u0000\u0000\u0000\u0000\u0000\u0000sr\u0000\u0006Armour\u0004�݇�ݰ�\u0002\u0000\u0000xr\u0000\tEquipmentm�}��\u007F�i\u0002\u0000\u0006D\u0000\u0006attackD\u0000\u0007defenceD\u0000\u0006healthI\u0000\u0005priceD\u0000\u0005speedL\u0000\u0004nameq\u0000~\u0000\u0003xp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000?�\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000F��\u0000\u0000\u0000\u0000\u0000\u0000t\u0000\tchainmailpt\u0000\nHighlandert\u0000\u0006rangerpsr\u0000\u0006Healer�y\u0015\u001EQ\u000EӪ\u0002\u0000\u0000xq\u0000~\u0000\n\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000@$\u0000\u0000\u0000\u0000\u0000\u0000@ \u0000\u0000\u0000\u0000\u0000\u0000@\"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000_@\u0018\u0000\u0000\u0000\u0000\u0000\u0000ppt\u0000\bSunchildt\u0000\u0007soothersr\u0000\u0010MythicalCreature��u\u001B�\u0001��\u0002\u0000\u0000xq\u0000~\u0000\n\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000@.\u0000\u0000\u0000\u0000\u0000\u0000@&\u0000\u0000\u0000\u0000\u0000\u0000@$\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�@(\u0000\u0000\u0000\u0000\u0000\u0000ppt\u0000\u000BMarshlandert\u0000\bbasilisksr\u0000\u0004MageĲ+�Q��\u0002\u0000\u0000xq\u0000~\u0000\n\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000@(\u0000\u0000\u0000\u0000\u0000\u0000@\u001C\u0000\u0000\u0000\u0000\u0000\u0000@$\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000d@(\u0000\u0000\u0000\u0000\u0000\u0000ppq\u0000~\u0000\u001At\u0000\u0007warlocksr\u0000\u0006Knight>�b�\u0006�W\u0002\u0000\u0000xq\u0000~\u0000\n\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000@1\u0000\u0000\u0000\u0000\u0000\u0000@0\u0000\u0000\u0000\u0000\u0000\u0000@*\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�@,\u0000\u0000\u0000\u0000\u0000\u0000ppq\u0000~\u0000\u0012t\u0000\u0004zoroxsr\u0000\u0011java.util.HashMap\u0005\u0007���\u0016`�\u0003\u0000\u0002F\u0000\nloadFactorI\u0000\tthresholdxp?@\u0000\u0000\u0000\u0000\u0000\fw\b\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0005t\u0000\u0006Archerq\u0000~\u0000\rt\u0000\u0004Mageq\u0000~\u0000\u001Dt\u0000\u0006Knightq\u0000~\u0000 t\u0000\u0006Healerq\u0000~\u0000\u0015t\u0000\u0010MythicalCreatureq\u0000~\u0000\u0019xt\u0000\rGeraldofRiviat\u0000\u0005WH001t\u0000\twhitewolfsq\u0000~\u0000\u0002@r8\u0000\u0000\u0000\u0000\u0000@4\u0000\u0000\u0000\u0000\u0000\u0000t\u0000\u0006Desertsq\u0000~\u0000\u0000\u0000\u0000\u0000\u0005w\u0004\u0000\u0000\u0000\u0005sq\u0000~\u0000\u0014\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000@$\u0000\u0000\u0000\u0000\u0000\u0000@ \u0000\u0000\u0000\u0000\u0000\u0000@\"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000_@\u0018\u0000\u0000\u0000\u0000\u0000\u0000ppt\u0000\bSunchildt\u0000\u0007soothersq\u0000~\u0000\u0018\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000@.\u0000\u0000\u0000\u0000\u0000\u0000@&\u0000\u0000\u0000\u0000\u0000\u0000@$\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�@(\u0000\u0000\u0000\u0000\u0000\u0000ppt\u0000\u000BMarshlandert\u0000\bbasilisksq\u0000~\u0000\u001C\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000@3\u0000\u0000\u0000\u0000\u0000\u0000@1\u0000\u0000\u0000\u0000\u0000\u0000@2\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u000E@,\u0000\u0000\u0000\u0000\u0000\u0000ppt\u0000\u0006Mystict\u0000\beldritchsq\u0000~\u0000\u001F\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000@2\u0000\u0000\u0000\u0000\u0000\u0000@4\u0000\u0000\u0000\u0000\u0000\u0000@1\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�@*\u0000\u0000\u0000\u0000\u0000\u0000ppq\u0000~\u00003t\u0000\nswiftbladesq\u0000~\u0000\t\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000?�\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000sq\u0000~\u0000\u000E\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000?�\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000i\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000t\u0000\u0007regaliappt\u0000\u0004Zingpxsq\u0000~\u0000\"?@\u0000\u0000\u0000\u0000\u0000\fw\b\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0005t\u0000\u0006Archerq\u0000~\u0000:t\u0000\u0004Mageq\u0000~\u00005t\u0000\u0006Knightq\u0000~\u00008t\u0000\u0006Healerq\u0000~\u0000/t\u0000\u0010MythicalCreatureq\u0000~\u00002xt\u0000\fOptimusPrimet\u0000\u0005OP001t\u0000\fOptimusPrimesq\u0000~\u0000\u0002@4\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000t\u0000\tMarshlandsq\u0000~\u0000\u0000\u0000\u0000\u0000\u0005w\u0004\u0000\u0000\u0000\u0005sq\u0000~\u0000\u0014\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000@$\u0000\u0000\u0000\u0000\u0000\u0000@ \u0000\u0000\u0000\u0000\u0000\u0000@\"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000_@\u0018\u0000\u0000\u0000\u0000\u0000\u0000ppt\u0000\bSunchildt\u0000\u0007soothersq\u0000~\u0000\t\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000@&\u0000\u0000\u0000\u0000\u0000\u0000@\u0010\u0000\u0000\u0000\u0000\u0000\u0000@\u0018\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000P@\"\u0000\u0000\u0000\u0000\u0000\u0000ppt\u0000\nHighlandert\u0000\u0007shooterpsq\u0000~\u0000\u001F\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000@ \u0000\u0000\u0000\u0000\u0000\u0000@\"\u0000\u0000\u0000\u0000\u0000\u0000@\u001C\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000U@ \u0000\u0000\u0000\u0000\u0000\u0000ppt\u0000\u000BMarshlandert\u0000\u0006squiresq\u0000~\u0000\u0018\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000@(\u0000\u0000\u0000\u0000\u0000\u0000@,\u0000\u0000\u0000\u0000\u0000\u0000@.\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000x@ \u0000\u0000\u0000\u0000\u0000\u0000ppq\u0000~\u0000Kt\u0000\u0006dragonsq\u0000~\u0000\u001C\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000@(\u0000\u0000\u0000\u0000\u0000\u0000@\u001C\u0000\u0000\u0000\u0000\u0000\u0000@$\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000x@(\u0000\u0000\u0000\u0000\u0000\u0000sq\u0000~\u0000\u000E\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000t\u0000\u0006fleecepq\u0000~\u0000Qt\u0000\u0007warlockxsq\u0000~\u0000\"?@\u0000\u0000\u0000\u0000\u0000\fw\b\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0005t\u0000\u0006Archerq\u0000~\u0000Mt\u0000\u0004Mageq\u0000~\u0000Ut\u0000\u0006Knightq\u0000~\u0000Pt\u0000\u0006Healerq\u0000~\u0000Jt\u0000\u0010MythicalCreatureq\u0000~\u0000Sxt\u0000\u0007Rivindut\u0000\u0005RI001t\u0000\u0007Rivindusq\u0000~\u0000\u0002@4\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000t\u0000\tMarshlandsq\u0000~\u0000\u0000\u0000\u0000\u0000\u0005w\u0004\u0000\u0000\u0000\u0005sq\u0000~\u0000\u0014\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000@$\u0000\u0000\u0000\u0000\u0000\u0000@ \u0000\u0000\u0000\u0000\u0000\u0000@\"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000_@\u0018\u0000\u0000\u0000\u0000\u0000\u0000ppt\u0000\bSunchildt\u0000\u0007soothersq\u0000~\u0000\t\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000@&\u0000\u0000\u0000\u0000\u0000\u0000@\u0010\u0000\u0000\u0000\u0000\u0000\u0000@\u0018\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000P@\"\u0000\u0000\u0000\u0000\u0000\u0000ppt\u0000\nHighlandert\u0000\u0007shooterpsq\u0000~\u0000\u001F\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000@ \u0000\u0000\u0000\u0000\u0000\u0000@\"\u0000\u0000\u0000\u0000\u0000\u0000@\u001C\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000U@ \u0000\u0000\u0000\u0000\u0000\u0000ppt\u0000\u000BMarshlandert\u0000\u0006squiresq\u0000~\u0000\u001C\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000@(\u0000\u0000\u0000\u0000\u0000\u0000@\u001C\u0000\u0000\u0000\u0000\u0000\u0000@$\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000d@(\u0000\u0000\u0000\u0000\u0000\u0000ppq\u0000~\u0000lt\u0000\u0007warlocksq\u0000~\u0000\u0018\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000@(\u0000\u0000\u0000\u0000\u0000\u0000@,\u0000\u0000\u0000\u0000\u0000\u0000@.\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000x@ \u0000\u0000\u0000\u0000\u0000\u0000ppq\u0000~\u0000ft\u0000\u0006dragonxsq\u0000~\u0000\"?@\u0000\u0000\u0000\u0000\u0000\fw\b\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0005t\u0000\u0006Archerq\u0000~\u0000ht\u0000\u0004Mageq\u0000~\u0000nt\u0000\u0006Knightq\u0000~\u0000kt\u0000\u0006Healerq\u0000~\u0000et\u0000\u0010MythicalCreatureq\u0000~\u0000pxt\u0000\u0007Rivindut\u0000\u0005RI001t\u0000\u0007Riviyaax
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/out/production/OOP-Project/Data.ser b/out/production/OOP-Project/Data.ser
--- a/out/production/OOP-Project/Data.ser	(revision 5da0b48584e7e0af1b042b0c9e17646e5524c32e)
+++ b/out/production/OOP-Project/Data.ser	(date 1710860130652)
@@ -1,16 +1,14 @@
-�� sr java.util.ArrayListx����a� I sizexp   w   sr UserɘŸ�J�b D coinsD xpL 
-homeGroundt Ljava/lang/String;L myArmyt Ljava/util/ArrayList;L 	myArmyMapt Ljava/util/Map;L nameq ~ L userIDq ~ L userNameq ~ xpA.��    @@      t 	Marshlandsq ~     w   sr ArcherL�RA'[� L nameq ~ xr 	Charactery�W�R� I armourCountI 
+�� sr java.util.ArrayListx����a� I sizexp   w   sr UserɘŸ�J�b D coinsI xpL 
+homeGroundt Ljava/lang/String;L myArmyt Ljava/util/ArrayList;L 	myArmyMapt Ljava/util/Map;L nameq ~ L userIDq ~ L userNameq ~ xp�^         �t 	Hillcrestsq ~     w   sr Knight>�b��W  xr 	Charactery�W�R� I armourCountI 
 artefactCountD attackD defenceD healthI priceD speedL armourt LArmour;L artefactt 
 LArtefact;L 
-characterTypeq ~ L nameq ~ xp       @,      @      @          �@"      sr Armour�݇�ݰ�  xr 	Equipmentm�}���i D attackD defenceD healthI priceD speedL nameq ~ xp        ?�                 F��      t 	chainmailpt 
-Highlandert rangerpsr Healer�yQӪ  xq ~ 
-        @$      @       @"         _@      ppt Sunchildt soothersr MythicalCreature��u���  xq ~ 
-        @.      @&      @$         �@(      ppt Marshlandert basilisksr MageĲ+�Q��  xq ~ 
-        @(      @      @$         d@(      ppq ~ t warlocksr Knight>�b��W  xq ~ 
-        @1      @0      @*         �@,      ppq ~ t zoroxsr java.util.HashMap���`� F 
-loadFactorI 	thresholdxp?@     w      t Archerq ~ 
-t Mageq ~ t Knightq ~  t Healerq ~ t MythicalCreatureq ~ xt 
-GeraldofRiviat WH001t 	whitewolfsq ~ @r8     @4      t Desertsq ~     w   sq ~         @$      @       @"         _@      ppt Sunchildt soothersq ~         @.      @&      @$         �@(      ppt Marshlandert basilisksq ~         @3      @1      @2        @,      ppt Mystict eldritchsq ~         @2      @4      @1         �@*      ppq ~ 3t 
-swiftbladesq ~ 	               ?�                          sq ~         ?�                 i        t regaliappt Zingpxsq ~ "?@     w      t Archerq ~ :t Mageq ~ 5t Knightq ~ 8t Healerq ~ /t MythicalCreatureq ~ 2xt OptimusPrimet OP001t OptimusPrimesq ~ @4              t 	Marshlandsq ~     w   sq ~         @$      @       @"         _@      ppt Sunchildt soothersq ~ 	        @&      @      @         P@"      ppt 
-Highlandert shooterpsq ~         @       @"      @         U@       ppt Marshlandert squiresq ~         @(      @,      @.         x@       ppq ~ Kt dragonsq ~        @(      @      @$         x@(      sq ~                                     t fleecepq ~ Qt warlockxsq ~ "?@     w      t Archerq ~ Mt Mageq ~ Ut Knightq ~ Pt Healerq ~ Jt MythicalCreatureq ~ Sxt Rivindut RI001t Rivindusq ~ @4              t 	Marshlandsq ~     w   sq ~         @$      @       @"         _@      ppt Sunchildt soothersq ~ 	        @&      @      @         P@"      ppt 
-Highlandert shooterpsq ~         @       @"      @         U@       ppt Marshlandert squiresq ~         @(      @      @$         d@(      ppq ~ lt warlocksq ~         @(      @,      @.         x@       ppq ~ ft dragonxsq ~ "?@     w      t Archerq ~ ht Mageq ~ nt Knightq ~ kt Healerq ~ et MythicalCreatureq ~ pxt Rivindut RI001t Riviyaax
\ No newline at end of file
+characterTypeq ~ L nameq ~ xp        @2      @4      @1         �@*      ppt Marshlandert 
+swiftbladesr Archer!�4\�}  xq ~ 
+                                            pppt sagittariussr MageĲ+�Q��  xq ~ 
+        @3      @1      @2        @,      ppt Mystict eldritchsr Healer�yQӪ  xq ~ 
+        @1      @.      @3        @(      ppt Sunchildt lightbringersr MythicalCreature��u���  xq ~ 
+        @,      @2      @4        T@4      ppq ~ t pegasusxsr java.util.HashMap���`� F 
+loadFactorI 	thresholdxp?@     w      t Archerq ~ t Mageq ~ t Knightq ~ 
+t Healerq ~ t MythicalCreatureq ~ xt muthut PA001t pakayasq ~ @4          t Desertsq ~     w   sq ~         @$      @       @"         _@      ppq ~ t soothersq ~         @&      @      @         P@"      ppt 
+Highlandert shootersq ~ 	        @       @"      @         U@       ppq ~ t squiresq ~         @(      @      @$         d@(      ppq ~ t warlocksq ~         @(      @,      @.         x@       ppq ~ t dragonxsq ~ ?@     w      q ~  q ~ -q ~ !q ~ 2q ~ "q ~ 0q ~ #q ~ +q ~ $q ~ 4xt 	sadanathat SA002t 
+sadaanathax
\ No newline at end of file
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"ArtifactsWorkspaceSettings\">\n    <artifacts-to-build>\n      <artifact name=\"OOP-Project:jar\" />\n    </artifacts-to-build>\n  </component>\n  <component name=\"AutoImportSettings\">\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\n  </component>\n  <component name=\"ChangeListManager\">\n    <list default=\"true\" id=\"87e91578-e36f-49b2-872f-3b028a72cd1b\" name=\"Changes\" comment=\"\">\n      <change beforePath=\"$PROJECT_DIR$/.idea/copilot/chatSessions/00000000000.xd\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/copilot/chatSessions/00000000000.xd\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/Data.ser\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/Data.ser\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/Menu.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/Menu.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/out/artifacts/OOP_Project_jar/OOP-Project.jar\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/out/artifacts/OOP_Project_jar/OOP-Project.jar\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/out/production/OOP-Project/Data.ser\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/out/production/OOP-Project/Data.ser\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/out/production/OOP-Project/Menu.class\" beforeDir=\"false\" />\n    </list>\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\n  </component>\n  <component name=\"Git.Settings\">\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$/..\" />\n  </component>\n  <component name=\"ProjectColorInfo\"><![CDATA[{\n  \"customColor\": \"\",\n  \"associatedIndex\": 3\n}]]></component>\n  <component name=\"ProjectId\" id=\"2dqeRHx8T8FNTZqfgxxr1Y3Nrez\" />\n  <component name=\"ProjectViewState\">\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\n    <option name=\"showLibraryContents\" value=\"true\" />\n  </component>\n  <component name=\"PropertiesComponent\"><![CDATA[{\n  \"keyToString\": {\n    \"Application.Main.executor\": \"Run\",\n    \"Application.Mystic Mayhem.executor\": \"Run\",\n    \"RunOnceActivity.OpenProjectViewOnStart\": \"true\",\n    \"RunOnceActivity.ShowReadmeOnStart\": \"true\",\n    \"SHARE_PROJECT_CONFIGURATION_FILES\": \"true\",\n    \"git-widget-placeholder\": \"main\",\n    \"kotlin-language-version-configured\": \"true\",\n    \"last_opened_file_path\": \"C:/Github/PC_Projects/OOP-Project/.idea\",\n    \"node.js.detected.package.eslint\": \"true\",\n    \"node.js.detected.package.tslint\": \"true\",\n    \"node.js.selected.package.eslint\": \"(autodetect)\",\n    \"node.js.selected.package.tslint\": \"(autodetect)\",\n    \"nodejs_package_manager_path\": \"npm\",\n    \"project.structure.last.edited\": \"Artifacts\",\n    \"project.structure.proportion\": \"0.0\",\n    \"project.structure.side.proportion\": \"0.0\",\n    \"settings.editor.selected.configurable\": \"reference.projectsettings.compiler.excludes\",\n    \"vue.rearranger.settings.migration\": \"true\"\n  }\n}]]></component>\n  <component name=\"RunManager\">\n    <configuration name=\"Mystic Mayhem\" type=\"Application\" factoryName=\"Application\">\n      <option name=\"MAIN_CLASS_NAME\" value=\"Main\" />\n      <module name=\"OOP-Project\" />\n      <method v=\"2\">\n        <option name=\"Make\" enabled=\"true\" />\n      </method>\n    </configuration>\n  </component>\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\n  <component name=\"TaskManager\">\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\n      <changelist id=\"87e91578-e36f-49b2-872f-3b028a72cd1b\" name=\"Changes\" comment=\"\" />\n      <created>1710740027901</created>\n      <option name=\"number\" value=\"Default\" />\n      <option name=\"presentableId\" value=\"Default\" />\n      <updated>1710740027901</updated>\n      <workItem from=\"1710740029328\" duration=\"12100000\" />\n    </task>\n    <servers />\n  </component>\n  <component name=\"TypeScriptGeneratedFilesManager\">\n    <option name=\"version\" value=\"3\" />\n  </component>\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 5da0b48584e7e0af1b042b0c9e17646e5524c32e)
+++ b/.idea/workspace.xml	(date 1710860129788)
@@ -9,14 +9,25 @@
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="87e91578-e36f-49b2-872f-3b028a72cd1b" name="Changes" comment="">
-      <change beforePath="$PROJECT_DIR$/.idea/copilot/chatSessions/00000000000.xd" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/copilot/chatSessions/00000000000.xd" afterDir="false" />
+    <list default="true" id="87e91578-e36f-49b2-872f-3b028a72cd1b" name="Changes" comment="removed removetroop and used get usercount">
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/Data.ser" beforeDir="false" afterPath="$PROJECT_DIR$/Data.ser" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/Data.ser" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/META-INF/MANIFEST.MF" beforeDir="false" />
       <change beforePath="$PROJECT_DIR$/Menu.java" beforeDir="false" afterPath="$PROJECT_DIR$/Menu.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/War.java" beforeDir="false" afterPath="$PROJECT_DIR$/War.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/out/artifacts/OOP_Project_jar/OOP-Project.jar" beforeDir="false" afterPath="$PROJECT_DIR$/out/artifacts/OOP_Project_jar/OOP-Project.jar" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/out/production/OOP-Project/Archer.class" beforeDir="false" afterPath="$PROJECT_DIR$/out/production/OOP-Project/Archer.class" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/out/production/OOP-Project/Armour.class" beforeDir="false" afterPath="$PROJECT_DIR$/out/production/OOP-Project/Armour.class" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/out/production/OOP-Project/Army.class" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/out/production/OOP-Project/Artefact.class" beforeDir="false" afterPath="$PROJECT_DIR$/out/production/OOP-Project/Artefact.class" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/out/production/OOP-Project/Character.class" beforeDir="false" afterPath="$PROJECT_DIR$/out/production/OOP-Project/Character.class" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/out/production/OOP-Project/Data.ser" beforeDir="false" afterPath="$PROJECT_DIR$/out/production/OOP-Project/Data.ser" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/out/production/OOP-Project/Menu.class" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/out/production/OOP-Project/META-INF/MANIFEST.MF" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/out/production/OOP-Project/Mage.class" beforeDir="false" afterPath="$PROJECT_DIR$/out/production/OOP-Project/Mage.class" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/out/production/OOP-Project/Menu.class" beforeDir="false" afterPath="$PROJECT_DIR$/out/production/OOP-Project/Menu.class" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/out/production/OOP-Project/MythicalCreature.class" beforeDir="false" afterPath="$PROJECT_DIR$/out/production/OOP-Project/MythicalCreature.class" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/out/production/OOP-Project/User.class" beforeDir="false" afterPath="$PROJECT_DIR$/out/production/OOP-Project/User.class" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/out/production/OOP-Project/War.class" beforeDir="false" afterPath="$PROJECT_DIR$/out/production/OOP-Project/War.class" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -26,10 +37,10 @@
   <component name="Git.Settings">
     <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$/.." />
   </component>
-  <component name="ProjectColorInfo"><![CDATA[{
-  "customColor": "",
-  "associatedIndex": 3
-}]]></component>
+  <component name="ProjectColorInfo">{
+  &quot;customColor&quot;: &quot;&quot;,
+  &quot;associatedIndex&quot;: 3
+}</component>
   <component name="ProjectId" id="2dqeRHx8T8FNTZqfgxxr1Y3Nrez" />
   <component name="ProjectViewState">
     <option name="hideEmptyMiddlePackages" value="true" />
@@ -76,9 +87,101 @@
       <updated>1710740027901</updated>
       <workItem from="1710740029328" duration="12100000" />
     </task>
+    <task id="LOCAL-00001" summary="optimusprime done">
+      <option name="closed" value="true" />
+      <created>1710836094212</created>
+      <option name="number" value="00001" />
+      <option name="presentableId" value="LOCAL-00001" />
+      <option name="project" value="LOCAL" />
+      <updated>1710836094212</updated>
+    </task>
+    <task id="LOCAL-00002" summary="optimusprime done">
+      <option name="closed" value="true" />
+      <created>1710836181387</created>
+      <option name="number" value="00002" />
+      <option name="presentableId" value="LOCAL-00002" />
+      <option name="project" value="LOCAL" />
+      <updated>1710836181387</updated>
+    </task>
+    <task id="LOCAL-00003" summary="salli httala hari">
+      <option name="closed" value="true" />
+      <created>1710849006146</created>
+      <option name="number" value="00003" />
+      <option name="presentableId" value="LOCAL-00003" />
+      <option name="project" value="LOCAL" />
+      <updated>1710849006146</updated>
+    </task>
+    <task id="LOCAL-00004" summary="salli madi unamath add wena eka hadala">
+      <option name="closed" value="true" />
+      <created>1710852892385</created>
+      <option name="number" value="00004" />
+      <option name="presentableId" value="LOCAL-00004" />
+      <option name="project" value="LOCAL" />
+      <updated>1710852892385</updated>
+    </task>
+    <task id="LOCAL-00005" summary="some comments">
+      <option name="closed" value="true" />
+      <created>1710856442503</created>
+      <option name="number" value="00005" />
+      <option name="presentableId" value="LOCAL-00005" />
+      <option name="project" value="LOCAL" />
+      <updated>1710856442503</updated>
+    </task>
+    <task id="LOCAL-00006" summary="army removed">
+      <option name="closed" value="true" />
+      <created>1710856513078</created>
+      <option name="number" value="00006" />
+      <option name="presentableId" value="LOCAL-00006" />
+      <option name="project" value="LOCAL" />
+      <updated>1710856513078</updated>
+    </task>
+    <task id="LOCAL-00007" summary="removed removetroop and used get usercount">
+      <option name="closed" value="true" />
+      <created>1710857431206</created>
+      <option name="number" value="00007" />
+      <option name="presentableId" value="LOCAL-00007" />
+      <option name="project" value="LOCAL" />
+      <updated>1710857431206</updated>
+    </task>
+    <option name="localTasksCounter" value="8" />
     <servers />
   </component>
   <component name="TypeScriptGeneratedFilesManager">
     <option name="version" value="3" />
   </component>
+  <component name="Vcs.Log.Tabs.Properties">
+    <option name="TAB_STATES">
+      <map>
+        <entry key="MAIN">
+          <value>
+            <State />
+          </value>
+        </entry>
+      </map>
+    </option>
+  </component>
+  <component name="VcsManagerConfiguration">
+    <MESSAGE value="optimusprime done" />
+    <MESSAGE value="salli httala hari" />
+    <MESSAGE value="salli madi unamath add wena eka hadala" />
+    <MESSAGE value="some comments" />
+    <MESSAGE value="army removed" />
+    <MESSAGE value="removed removetroop and used get usercount" />
+    <option name="LAST_COMMIT_MESSAGE" value="removed removetroop and used get usercount" />
+  </component>
+  <component name="XDebuggerManager">
+    <breakpoint-manager>
+      <breakpoints>
+        <line-breakpoint enabled="true" type="java-method">
+          <url>file://$PROJECT_DIR$/Menu.java</url>
+          <line>399</line>
+          <properties class="Menu" method="changeCharacters">
+            <option name="EMULATED" value="true" />
+            <option name="WATCH_EXIT" value="false" />
+          </properties>
+          <option name="timeStamp" value="2" />
+        </line-breakpoint>
+      </breakpoints>
+    </breakpoint-manager>
+  </component>
 </project>
\ No newline at end of file
